{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLocation = getLocation;\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match = void 0;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}\n/**\n * Represents a location in a Source.\n */","map":{"version":3,"sources":["/Users/poprahul/workspace/frontend/amplify-apps/calandarApp/aws-mobile-appsync-events-starter-react/node_modules/graphql/language/location.js"],"names":["Object","defineProperty","exports","value","getLocation","source","position","lineRegexp","line","column","match","exec","body","index","length"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,WAAR,GAAsBA,WAAtB;AAGA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,WAAT,CAAqBC,MAArB,EAA6BC,QAA7B,EAAuC;AACrC,MAAIC,UAAU,GAAG,cAAjB;AACA,MAAIC,IAAI,GAAG,CAAX;AACA,MAAIC,MAAM,GAAGH,QAAQ,GAAG,CAAxB;AACA,MAAII,KAAK,GAAG,KAAK,CAAjB;;AACA,SAAO,CAACA,KAAK,GAAGH,UAAU,CAACI,IAAX,CAAgBN,MAAM,CAACO,IAAvB,CAAT,KAA0CF,KAAK,CAACG,KAAN,GAAcP,QAA/D,EAAyE;AACvEE,IAAAA,IAAI,IAAI,CAAR;AACAC,IAAAA,MAAM,GAAGH,QAAQ,GAAG,CAAX,IAAgBI,KAAK,CAACG,KAAN,GAAcH,KAAK,CAAC,CAAD,CAAL,CAASI,MAAvC,CAAT;AACD;;AACD,SAAO;AAAEN,IAAAA,IAAI,EAAEA,IAAR;AAAcC,IAAAA,MAAM,EAAEA;AAAtB,GAAP;AACD;AAED;AACA;AACA","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLocation = getLocation;\n\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match = void 0;\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n  return { line: line, column: column };\n}\n\n/**\n * Represents a location in a Source.\n */"]},"metadata":{},"sourceType":"script"}