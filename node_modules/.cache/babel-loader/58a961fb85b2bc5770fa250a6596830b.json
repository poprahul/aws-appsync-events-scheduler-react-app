{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * The set of allowed kind values for AST nodes.\n */\nexport var Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  VARIABLE: 'Variable',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n  // Values\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n  // Directives\n  DIRECTIVE: 'Directive',\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension',\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition'\n});\n/**\n * The enum type representing the possible kind values of AST nodes.\n */","map":{"version":3,"sources":["/Users/poprahul/workspace/frontend/amplify-apps/calandarApp/aws-mobile-appsync-events-starter-react/node_modules/aws-appsync/node_modules/graphql/module/language/kinds.js"],"names":["Kind","Object","freeze","NAME","DOCUMENT","OPERATION_DEFINITION","VARIABLE_DEFINITION","VARIABLE","SELECTION_SET","FIELD","ARGUMENT","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","INT","FLOAT","STRING","BOOLEAN","NULL","ENUM","LIST","OBJECT","OBJECT_FIELD","DIRECTIVE","NAMED_TYPE","LIST_TYPE","NON_NULL_TYPE","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","OBJECT_TYPE_DEFINITION","FIELD_DEFINITION","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","UNION_TYPE_DEFINITION","ENUM_TYPE_DEFINITION","ENUM_VALUE_DEFINITION","INPUT_OBJECT_TYPE_DEFINITION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","DIRECTIVE_DEFINITION"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,IAAIA,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc;AAC9B;AACAC,EAAAA,IAAI,EAAE,MAFwB;AAI9B;AACAC,EAAAA,QAAQ,EAAE,UALoB;AAM9BC,EAAAA,oBAAoB,EAAE,qBANQ;AAO9BC,EAAAA,mBAAmB,EAAE,oBAPS;AAQ9BC,EAAAA,QAAQ,EAAE,UARoB;AAS9BC,EAAAA,aAAa,EAAE,cATe;AAU9BC,EAAAA,KAAK,EAAE,OAVuB;AAW9BC,EAAAA,QAAQ,EAAE,UAXoB;AAa9B;AACAC,EAAAA,eAAe,EAAE,gBAda;AAe9BC,EAAAA,eAAe,EAAE,gBAfa;AAgB9BC,EAAAA,mBAAmB,EAAE,oBAhBS;AAkB9B;AACAC,EAAAA,GAAG,EAAE,UAnByB;AAoB9BC,EAAAA,KAAK,EAAE,YApBuB;AAqB9BC,EAAAA,MAAM,EAAE,aArBsB;AAsB9BC,EAAAA,OAAO,EAAE,cAtBqB;AAuB9BC,EAAAA,IAAI,EAAE,WAvBwB;AAwB9BC,EAAAA,IAAI,EAAE,WAxBwB;AAyB9BC,EAAAA,IAAI,EAAE,WAzBwB;AA0B9BC,EAAAA,MAAM,EAAE,aA1BsB;AA2B9BC,EAAAA,YAAY,EAAE,aA3BgB;AA6B9B;AACAC,EAAAA,SAAS,EAAE,WA9BmB;AAgC9B;AACAC,EAAAA,UAAU,EAAE,WAjCkB;AAkC9BC,EAAAA,SAAS,EAAE,UAlCmB;AAmC9BC,EAAAA,aAAa,EAAE,aAnCe;AAqC9B;AACAC,EAAAA,iBAAiB,EAAE,kBAtCW;AAuC9BC,EAAAA,yBAAyB,EAAE,yBAvCG;AAyC9B;AACAC,EAAAA,sBAAsB,EAAE,sBA1CM;AA2C9BC,EAAAA,sBAAsB,EAAE,sBA3CM;AA4C9BC,EAAAA,gBAAgB,EAAE,iBA5CY;AA6C9BC,EAAAA,sBAAsB,EAAE,sBA7CM;AA8C9BC,EAAAA,yBAAyB,EAAE,yBA9CG;AA+C9BC,EAAAA,qBAAqB,EAAE,qBA/CO;AAgD9BC,EAAAA,oBAAoB,EAAE,oBAhDQ;AAiD9BC,EAAAA,qBAAqB,EAAE,qBAjDO;AAkD9BC,EAAAA,4BAA4B,EAAE,2BAlDA;AAoD9B;AACAC,EAAAA,qBAAqB,EAAE,qBArDO;AAsD9BC,EAAAA,qBAAqB,EAAE,qBAtDO;AAuD9BC,EAAAA,wBAAwB,EAAE,wBAvDI;AAwD9BC,EAAAA,oBAAoB,EAAE,oBAxDQ;AAyD9BC,EAAAA,mBAAmB,EAAE,mBAzDS;AA0D9BC,EAAAA,2BAA2B,EAAE,0BA1DC;AA4D9B;AACAC,EAAAA,oBAAoB,EAAE;AA7DQ,CAAd,CAAX;AAgEP;AACA;AACA","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * The set of allowed kind values for AST nodes.\n */\nexport var Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  VARIABLE: 'Variable',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n\n  // Values\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n\n  // Directives\n  DIRECTIVE: 'Directive',\n\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension',\n\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition'\n});\n\n/**\n * The enum type representing the possible kind values of AST nodes.\n */"]},"metadata":{},"sourceType":"module"}