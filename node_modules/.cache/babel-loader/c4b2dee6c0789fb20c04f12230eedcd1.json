{"ast":null,"code":"import { GraphQLError } from '../../error';\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport { isNonNullType } from '../../type/definition';\nexport function defaultForRequiredVarMessage(varName, type, guessType) {\n  return 'Variable \"$' + varName + '\" of type \"' + String(type) + '\" is required and ' + 'will not use the default value. ' + ('Perhaps you meant to use type \"' + String(guessType) + '\".');\n}\n/**\n * Variable's default value is allowed\n *\n * A GraphQL document is only valid if all variable default values are allowed\n * due to a variable not being required.\n */\n\nexport function VariablesDefaultValueAllowed(context) {\n  return {\n    VariableDefinition: function VariableDefinition(node) {\n      var name = node.variable.name.value;\n      var defaultValue = node.defaultValue;\n      var type = context.getInputType();\n\n      if (isNonNullType(type) && defaultValue) {\n        context.reportError(new GraphQLError(defaultForRequiredVarMessage(name, type, type.ofType), [defaultValue]));\n      }\n\n      return false; // Do not traverse further.\n    },\n    SelectionSet: function SelectionSet() {\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition() {\n      return false;\n    }\n  };\n}","map":{"version":3,"sources":["/Users/poprahul/workspace/frontend/amplify-apps/calandarApp/aws-mobile-appsync-events-starter-react/node_modules/aws-appsync/node_modules/graphql/module/validation/rules/VariablesDefaultValueAllowed.js"],"names":["GraphQLError","isNonNullType","defaultForRequiredVarMessage","varName","type","guessType","String","VariablesDefaultValueAllowed","context","VariableDefinition","node","name","variable","value","defaultValue","getInputType","reportError","ofType","SelectionSet","FragmentDefinition"],"mappings":"AACA,SAASA,YAAT,QAA6B,aAA7B;AAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,aAAT,QAA8B,uBAA9B;AAGA,OAAO,SAASC,4BAAT,CAAsCC,OAAtC,EAA+CC,IAA/C,EAAqDC,SAArD,EAAgE;AACrE,SAAO,gBAAgBF,OAAhB,GAA0B,aAA1B,GAA0CG,MAAM,CAACF,IAAD,CAAhD,GAAyD,oBAAzD,GAAgF,kCAAhF,IAAsH,oCAAoCE,MAAM,CAACD,SAAD,CAA1C,GAAwD,IAA9K,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASE,4BAAT,CAAsCC,OAAtC,EAA+C;AACpD,SAAO;AACLC,IAAAA,kBAAkB,EAAE,SAASA,kBAAT,CAA4BC,IAA5B,EAAkC;AACpD,UAAIC,IAAI,GAAGD,IAAI,CAACE,QAAL,CAAcD,IAAd,CAAmBE,KAA9B;AACA,UAAIC,YAAY,GAAGJ,IAAI,CAACI,YAAxB;AACA,UAAIV,IAAI,GAAGI,OAAO,CAACO,YAAR,EAAX;;AACA,UAAId,aAAa,CAACG,IAAD,CAAb,IAAuBU,YAA3B,EAAyC;AACvCN,QAAAA,OAAO,CAACQ,WAAR,CAAoB,IAAIhB,YAAJ,CAAiBE,4BAA4B,CAACS,IAAD,EAAOP,IAAP,EAAaA,IAAI,CAACa,MAAlB,CAA7C,EAAwE,CAACH,YAAD,CAAxE,CAApB;AACD;;AACD,aAAO,KAAP,CAPoD,CAOtC;AACf,KATI;AAWLI,IAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB;AACpC,aAAO,KAAP;AACD,KAbI;AAcLC,IAAAA,kBAAkB,EAAE,SAASA,kBAAT,GAA8B;AAChD,aAAO,KAAP;AACD;AAhBI,GAAP;AAkBD","sourcesContent":["\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             * \n                                             */\n\nimport { isNonNullType } from '../../type/definition';\n\n\nexport function defaultForRequiredVarMessage(varName, type, guessType) {\n  return 'Variable \"$' + varName + '\" of type \"' + String(type) + '\" is required and ' + 'will not use the default value. ' + ('Perhaps you meant to use type \"' + String(guessType) + '\".');\n}\n\n/**\n * Variable's default value is allowed\n *\n * A GraphQL document is only valid if all variable default values are allowed\n * due to a variable not being required.\n */\nexport function VariablesDefaultValueAllowed(context) {\n  return {\n    VariableDefinition: function VariableDefinition(node) {\n      var name = node.variable.name.value;\n      var defaultValue = node.defaultValue;\n      var type = context.getInputType();\n      if (isNonNullType(type) && defaultValue) {\n        context.reportError(new GraphQLError(defaultForRequiredVarMessage(name, type, type.ofType), [defaultValue]));\n      }\n      return false; // Do not traverse further.\n    },\n\n    SelectionSet: function SelectionSet() {\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition() {\n      return false;\n    }\n  };\n}"]},"metadata":{},"sourceType":"module"}