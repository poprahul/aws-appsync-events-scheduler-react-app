{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mapAsyncIterator;\n\nvar _iterall = require('iterall');\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\n\n\nfunction mapAsyncIterator(iterable, callback, rejectCallback) {\n  var iterator = (0, _iterall.getAsyncIterator)(iterable);\n  var $return = void 0;\n  var abruptClose = void 0;\n\n  if (typeof iterator.return === 'function') {\n    $return = iterator.return;\n\n    abruptClose = function abruptClose(error) {\n      var rethrow = function rethrow() {\n        return Promise.reject(error);\n      };\n\n      return $return.call(iterator).then(rethrow, rethrow);\n    };\n  }\n\n  function mapResult(result) {\n    return result.done ? result : asyncMapValue(result.value, callback).then(iteratorResult, abruptClose);\n  }\n\n  var mapReject = void 0;\n\n  if (rejectCallback) {\n    // Capture rejectCallback to ensure it cannot be null.\n    var reject = rejectCallback;\n\n    mapReject = function mapReject(error) {\n      return asyncMapValue(error, reject).then(iteratorResult, abruptClose);\n    };\n  }\n  /* TODO: Flow doesn't support symbols as keys:\n     https://github.com/facebook/flow/issues/3258 */\n\n\n  return _defineProperty({\n    next: function next() {\n      return iterator.next().then(mapResult, mapReject);\n    },\n    return: function _return() {\n      return $return ? $return.call(iterator).then(mapResult, mapReject) : Promise.resolve({\n        value: undefined,\n        done: true\n      });\n    },\n    throw: function _throw(error) {\n      if (typeof iterator.throw === 'function') {\n        return iterator.throw(error).then(mapResult, mapReject);\n      }\n\n      return Promise.reject(error).catch(abruptClose);\n    }\n  }, _iterall.$$asyncIterator, function () {\n    return this;\n  });\n}\n\nfunction asyncMapValue(value, callback) {\n  return new Promise(function (resolve) {\n    return resolve(callback(value));\n  });\n}\n\nfunction iteratorResult(value) {\n  return {\n    value: value,\n    done: false\n  };\n}","map":{"version":3,"sources":["/Users/poprahul/workspace/frontend/amplify-apps/calandarApp/aws-mobile-appsync-events-starter-react/node_modules/graphql/subscription/mapAsyncIterator.js"],"names":["Object","defineProperty","exports","value","default","mapAsyncIterator","_iterall","require","_defineProperty","obj","key","enumerable","configurable","writable","iterable","callback","rejectCallback","iterator","getAsyncIterator","$return","abruptClose","return","error","rethrow","Promise","reject","call","then","mapResult","result","done","asyncMapValue","iteratorResult","mapReject","next","_return","resolve","undefined","throw","_throw","catch","$$asyncIterator"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mapAsyncIterator;\n\nvar _iterall = require('iterall');\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; } /**\n                                                                                                                                                                                                                   * Copyright (c) 2017-present, Facebook, Inc.\n                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                   * This source code is licensed under the MIT license found in the\n                                                                                                                                                                                                                   * LICENSE file in the root directory of this source tree.\n                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                   * \n                                                                                                                                                                                                                   */\n\n/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nfunction mapAsyncIterator(iterable, callback, rejectCallback) {\n  var iterator = (0, _iterall.getAsyncIterator)(iterable);\n  var $return = void 0;\n  var abruptClose = void 0;\n  if (typeof iterator.return === 'function') {\n    $return = iterator.return;\n    abruptClose = function abruptClose(error) {\n      var rethrow = function rethrow() {\n        return Promise.reject(error);\n      };\n      return $return.call(iterator).then(rethrow, rethrow);\n    };\n  }\n\n  function mapResult(result) {\n    return result.done ? result : asyncMapValue(result.value, callback).then(iteratorResult, abruptClose);\n  }\n\n  var mapReject = void 0;\n  if (rejectCallback) {\n    // Capture rejectCallback to ensure it cannot be null.\n    var reject = rejectCallback;\n    mapReject = function mapReject(error) {\n      return asyncMapValue(error, reject).then(iteratorResult, abruptClose);\n    };\n  }\n\n  /* TODO: Flow doesn't support symbols as keys:\n     https://github.com/facebook/flow/issues/3258 */\n  return _defineProperty({\n    next: function next() {\n      return iterator.next().then(mapResult, mapReject);\n    },\n    return: function _return() {\n      return $return ? $return.call(iterator).then(mapResult, mapReject) : Promise.resolve({ value: undefined, done: true });\n    },\n    throw: function _throw(error) {\n      if (typeof iterator.throw === 'function') {\n        return iterator.throw(error).then(mapResult, mapReject);\n      }\n      return Promise.reject(error).catch(abruptClose);\n    }\n  }, _iterall.$$asyncIterator, function () {\n    return this;\n  });\n}\n\nfunction asyncMapValue(value, callback) {\n  return new Promise(function (resolve) {\n    return resolve(callback(value));\n  });\n}\n\nfunction iteratorResult(value) {\n  return { value: value, done: false };\n}"]},"metadata":{},"sourceType":"script"}