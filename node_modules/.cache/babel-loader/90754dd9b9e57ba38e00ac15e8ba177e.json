{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GraphQLError = GraphQLError;\n\nvar _location = require('../language/location');\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\n\nfunction GraphQLError( // eslint-disable-line no-redeclare\nmessage, nodes, source, positions, path, originalError) {\n  // Compute locations in the source for the given nodes/positions.\n  var _source = source;\n\n  if (!_source && nodes && nodes.length > 0) {\n    var node = nodes[0];\n    _source = node && node.loc && node.loc.source;\n  }\n\n  var _positions = positions;\n\n  if (!_positions && nodes) {\n    _positions = nodes.filter(function (node) {\n      return Boolean(node.loc);\n    }).map(function (node) {\n      return node.loc.start;\n    });\n  }\n\n  if (_positions && _positions.length === 0) {\n    _positions = undefined;\n  }\n\n  var _locations = void 0;\n\n  var _source2 = _source; // seems here Flow need a const to resolve type.\n\n  if (_source2 && _positions) {\n    _locations = _positions.map(function (pos) {\n      return (0, _location.getLocation)(_source2, pos);\n    });\n  }\n\n  Object.defineProperties(this, {\n    message: {\n      value: message,\n      // By being enumerable, JSON.stringify will include `message` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true,\n      writable: true\n    },\n    locations: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _locations || undefined,\n      // By being enumerable, JSON.stringify will include `locations` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true\n    },\n    path: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: path || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true\n    },\n    nodes: {\n      value: nodes || undefined\n    },\n    source: {\n      value: _source || undefined\n    },\n    positions: {\n      value: _positions || undefined\n    },\n    originalError: {\n      value: originalError\n    }\n  }); // Include (non-enumerable) stack trace.\n\n  if (originalError && originalError.stack) {\n    Object.defineProperty(this, 'stack', {\n      value: originalError.stack,\n      writable: true,\n      configurable: true\n    });\n  } else if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, GraphQLError);\n  } else {\n    Object.defineProperty(this, 'stack', {\n      value: Error().stack,\n      writable: true,\n      configurable: true\n    });\n  }\n}\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n\nGraphQLError.prototype = Object.create(Error.prototype, {\n  constructor: {\n    value: GraphQLError\n  },\n  name: {\n    value: 'GraphQLError'\n  }\n});","map":{"version":3,"sources":["/Users/poprahul/workspace/frontend/amplify-apps/calandarApp/aws-mobile-appsync-events-starter-react/node_modules/graphql/error/GraphQLError.js"],"names":["Object","defineProperty","exports","value","GraphQLError","_location","require","message","nodes","source","positions","path","originalError","_source","length","node","loc","_positions","filter","Boolean","map","start","undefined","_locations","_source2","pos","getLocation","defineProperties","enumerable","writable","locations","stack","configurable","Error","captureStackTrace","prototype","create","constructor","name"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GraphQLError = GraphQLError;\n\nvar _location = require('../language/location');\n\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\nfunction GraphQLError( // eslint-disable-line no-redeclare\nmessage, nodes, source, positions, path, originalError) {\n  // Compute locations in the source for the given nodes/positions.\n  var _source = source;\n  if (!_source && nodes && nodes.length > 0) {\n    var node = nodes[0];\n    _source = node && node.loc && node.loc.source;\n  }\n\n  var _positions = positions;\n  if (!_positions && nodes) {\n    _positions = nodes.filter(function (node) {\n      return Boolean(node.loc);\n    }).map(function (node) {\n      return node.loc.start;\n    });\n  }\n  if (_positions && _positions.length === 0) {\n    _positions = undefined;\n  }\n\n  var _locations = void 0;\n  var _source2 = _source; // seems here Flow need a const to resolve type.\n  if (_source2 && _positions) {\n    _locations = _positions.map(function (pos) {\n      return (0, _location.getLocation)(_source2, pos);\n    });\n  }\n\n  Object.defineProperties(this, {\n    message: {\n      value: message,\n      // By being enumerable, JSON.stringify will include `message` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true,\n      writable: true\n    },\n    locations: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _locations || undefined,\n      // By being enumerable, JSON.stringify will include `locations` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true\n    },\n    path: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: path || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true\n    },\n    nodes: {\n      value: nodes || undefined\n    },\n    source: {\n      value: _source || undefined\n    },\n    positions: {\n      value: _positions || undefined\n    },\n    originalError: {\n      value: originalError\n    }\n  });\n\n  // Include (non-enumerable) stack trace.\n  if (originalError && originalError.stack) {\n    Object.defineProperty(this, 'stack', {\n      value: originalError.stack,\n      writable: true,\n      configurable: true\n    });\n  } else if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, GraphQLError);\n  } else {\n    Object.defineProperty(this, 'stack', {\n      value: Error().stack,\n      writable: true,\n      configurable: true\n    });\n  }\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   */\n\nGraphQLError.prototype = Object.create(Error.prototype, {\n  constructor: { value: GraphQLError },\n  name: { value: 'GraphQLError' }\n});"]},"metadata":{},"sourceType":"script"}