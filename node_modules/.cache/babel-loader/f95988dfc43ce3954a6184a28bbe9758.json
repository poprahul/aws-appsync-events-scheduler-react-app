{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.duplicateArgMessage = duplicateArgMessage;\nexports.UniqueArgumentNames = UniqueArgumentNames;\n\nvar _error = require('../../error');\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n\nfunction duplicateArgMessage(argName) {\n  return 'There can be only one argument named \"' + argName + '\".';\n}\n/**\n * Unique argument names\n *\n * A GraphQL field or directive is only valid if all supplied arguments are\n * uniquely named.\n */\n\n\nfunction UniqueArgumentNames(context) {\n  var knownArgNames = Object.create(null);\n  return {\n    Field: function Field() {\n      knownArgNames = Object.create(null);\n    },\n    Directive: function Directive() {\n      knownArgNames = Object.create(null);\n    },\n    Argument: function Argument(node) {\n      var argName = node.name.value;\n\n      if (knownArgNames[argName]) {\n        context.reportError(new _error.GraphQLError(duplicateArgMessage(argName), [knownArgNames[argName], node.name]));\n      } else {\n        knownArgNames[argName] = node.name;\n      }\n\n      return false;\n    }\n  };\n}","map":{"version":3,"sources":["/Users/poprahul/workspace/frontend/amplify-apps/calandarApp/aws-mobile-appsync-events-starter-react/node_modules/graphql/validation/rules/UniqueArgumentNames.js"],"names":["Object","defineProperty","exports","value","duplicateArgMessage","UniqueArgumentNames","_error","require","argName","context","knownArgNames","create","Field","Directive","Argument","node","name","reportError","GraphQLError"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,mBAAR,GAA8BA,mBAA9B;AACAF,OAAO,CAACG,mBAAR,GAA8BA,mBAA9B;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,aAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASH,mBAAT,CAA6BI,OAA7B,EAAsC;AACpC,SAAO,2CAA2CA,OAA3C,GAAqD,IAA5D;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASH,mBAAT,CAA6BI,OAA7B,EAAsC;AACpC,MAAIC,aAAa,GAAGV,MAAM,CAACW,MAAP,CAAc,IAAd,CAApB;AACA,SAAO;AACLC,IAAAA,KAAK,EAAE,SAASA,KAAT,GAAiB;AACtBF,MAAAA,aAAa,GAAGV,MAAM,CAACW,MAAP,CAAc,IAAd,CAAhB;AACD,KAHI;AAILE,IAAAA,SAAS,EAAE,SAASA,SAAT,GAAqB;AAC9BH,MAAAA,aAAa,GAAGV,MAAM,CAACW,MAAP,CAAc,IAAd,CAAhB;AACD,KANI;AAOLG,IAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;AAChC,UAAIP,OAAO,GAAGO,IAAI,CAACC,IAAL,CAAUb,KAAxB;;AACA,UAAIO,aAAa,CAACF,OAAD,CAAjB,EAA4B;AAC1BC,QAAAA,OAAO,CAACQ,WAAR,CAAoB,IAAIX,MAAM,CAACY,YAAX,CAAwBd,mBAAmB,CAACI,OAAD,CAA3C,EAAsD,CAACE,aAAa,CAACF,OAAD,CAAd,EAAyBO,IAAI,CAACC,IAA9B,CAAtD,CAApB;AACD,OAFD,MAEO;AACLN,QAAAA,aAAa,CAACF,OAAD,CAAb,GAAyBO,IAAI,CAACC,IAA9B;AACD;;AACD,aAAO,KAAP;AACD;AAfI,GAAP;AAiBD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.duplicateArgMessage = duplicateArgMessage;\nexports.UniqueArgumentNames = UniqueArgumentNames;\n\nvar _error = require('../../error');\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction duplicateArgMessage(argName) {\n  return 'There can be only one argument named \"' + argName + '\".';\n}\n\n/**\n * Unique argument names\n *\n * A GraphQL field or directive is only valid if all supplied arguments are\n * uniquely named.\n */\nfunction UniqueArgumentNames(context) {\n  var knownArgNames = Object.create(null);\n  return {\n    Field: function Field() {\n      knownArgNames = Object.create(null);\n    },\n    Directive: function Directive() {\n      knownArgNames = Object.create(null);\n    },\n    Argument: function Argument(node) {\n      var argName = node.name.value;\n      if (knownArgNames[argName]) {\n        context.reportError(new _error.GraphQLError(duplicateArgMessage(argName), [knownArgNames[argName], node.name]));\n      } else {\n        knownArgNames[argName] = node.name;\n      }\n      return false;\n    }\n  };\n}"]},"metadata":{},"sourceType":"script"}