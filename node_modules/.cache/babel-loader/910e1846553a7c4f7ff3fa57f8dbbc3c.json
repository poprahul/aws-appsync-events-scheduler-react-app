{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unknownTypeMessage = unknownTypeMessage;\nexports.KnownTypeNames = KnownTypeNames;\n\nvar _error = require('../../error');\n\nvar _suggestionList = require('../../jsutils/suggestionList');\n\nvar _suggestionList2 = _interopRequireDefault(_suggestionList);\n\nvar _quotedOrList = require('../../jsutils/quotedOrList');\n\nvar _quotedOrList2 = _interopRequireDefault(_quotedOrList);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n\nfunction unknownTypeMessage(type, suggestedTypes) {\n  var message = 'Unknown type \"' + String(type) + '\".';\n\n  if (suggestedTypes.length) {\n    message += ' Did you mean ' + (0, _quotedOrList2.default)(suggestedTypes) + '?';\n  }\n\n  return message;\n}\n/**\n * Known type names\n *\n * A GraphQL document is only valid if referenced types (specifically\n * variable definitions and fragment conditions) are defined by the type schema.\n */\n\n\nfunction KnownTypeNames(context) {\n  return {\n    // TODO: when validating IDL, re-enable these. Experimental version does not\n    // add unreferenced types, resulting in false-positive errors. Squelched\n    // errors for now.\n    ObjectTypeDefinition: function ObjectTypeDefinition() {\n      return false;\n    },\n    InterfaceTypeDefinition: function InterfaceTypeDefinition() {\n      return false;\n    },\n    UnionTypeDefinition: function UnionTypeDefinition() {\n      return false;\n    },\n    InputObjectTypeDefinition: function InputObjectTypeDefinition() {\n      return false;\n    },\n    NamedType: function NamedType(node) {\n      var schema = context.getSchema();\n      var typeName = node.name.value;\n      var type = schema.getType(typeName);\n\n      if (!type) {\n        context.reportError(new _error.GraphQLError(unknownTypeMessage(typeName, (0, _suggestionList2.default)(typeName, Object.keys(schema.getTypeMap()))), [node]));\n      }\n    }\n  };\n}","map":{"version":3,"sources":["/Users/poprahul/workspace/frontend/amplify-apps/calandarApp/aws-mobile-appsync-events-starter-react/node_modules/graphql/validation/rules/KnownTypeNames.js"],"names":["Object","defineProperty","exports","value","unknownTypeMessage","KnownTypeNames","_error","require","_suggestionList","_suggestionList2","_interopRequireDefault","_quotedOrList","_quotedOrList2","obj","__esModule","default","type","suggestedTypes","message","String","length","context","ObjectTypeDefinition","InterfaceTypeDefinition","UnionTypeDefinition","InputObjectTypeDefinition","NamedType","node","schema","getSchema","typeName","name","getType","reportError","GraphQLError","keys","getTypeMap"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,kBAAR,GAA6BA,kBAA7B;AACAF,OAAO,CAACG,cAAR,GAAyBA,cAAzB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,aAAD,CAApB;;AAEA,IAAIC,eAAe,GAAGD,OAAO,CAAC,8BAAD,CAA7B;;AAEA,IAAIE,gBAAgB,GAAGC,sBAAsB,CAACF,eAAD,CAA7C;;AAEA,IAAIG,aAAa,GAAGJ,OAAO,CAAC,4BAAD,CAA3B;;AAEA,IAAIK,cAAc,GAAGF,sBAAsB,CAACC,aAAD,CAA3C;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAST,kBAAT,CAA4BY,IAA5B,EAAkCC,cAAlC,EAAkD;AAChD,MAAIC,OAAO,GAAG,mBAAmBC,MAAM,CAACH,IAAD,CAAzB,GAAkC,IAAhD;;AACA,MAAIC,cAAc,CAACG,MAAnB,EAA2B;AACzBF,IAAAA,OAAO,IAAI,mBAAmB,CAAC,GAAGN,cAAc,CAACG,OAAnB,EAA4BE,cAA5B,CAAnB,GAAiE,GAA5E;AACD;;AACD,SAAOC,OAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASb,cAAT,CAAwBgB,OAAxB,EAAiC;AAC/B,SAAO;AACL;AACA;AACA;AACAC,IAAAA,oBAAoB,EAAE,SAASA,oBAAT,GAAgC;AACpD,aAAO,KAAP;AACD,KANI;AAOLC,IAAAA,uBAAuB,EAAE,SAASA,uBAAT,GAAmC;AAC1D,aAAO,KAAP;AACD,KATI;AAULC,IAAAA,mBAAmB,EAAE,SAASA,mBAAT,GAA+B;AAClD,aAAO,KAAP;AACD,KAZI;AAaLC,IAAAA,yBAAyB,EAAE,SAASA,yBAAT,GAAqC;AAC9D,aAAO,KAAP;AACD,KAfI;AAgBLC,IAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBC,IAAnB,EAAyB;AAClC,UAAIC,MAAM,GAAGP,OAAO,CAACQ,SAAR,EAAb;AACA,UAAIC,QAAQ,GAAGH,IAAI,CAACI,IAAL,CAAU5B,KAAzB;AACA,UAAIa,IAAI,GAAGY,MAAM,CAACI,OAAP,CAAeF,QAAf,CAAX;;AACA,UAAI,CAACd,IAAL,EAAW;AACTK,QAAAA,OAAO,CAACY,WAAR,CAAoB,IAAI3B,MAAM,CAAC4B,YAAX,CAAwB9B,kBAAkB,CAAC0B,QAAD,EAAW,CAAC,GAAGrB,gBAAgB,CAACM,OAArB,EAA8Be,QAA9B,EAAwC9B,MAAM,CAACmC,IAAP,CAAYP,MAAM,CAACQ,UAAP,EAAZ,CAAxC,CAAX,CAA1C,EAAiI,CAACT,IAAD,CAAjI,CAApB;AACD;AACF;AAvBI,GAAP;AAyBD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unknownTypeMessage = unknownTypeMessage;\nexports.KnownTypeNames = KnownTypeNames;\n\nvar _error = require('../../error');\n\nvar _suggestionList = require('../../jsutils/suggestionList');\n\nvar _suggestionList2 = _interopRequireDefault(_suggestionList);\n\nvar _quotedOrList = require('../../jsutils/quotedOrList');\n\nvar _quotedOrList2 = _interopRequireDefault(_quotedOrList);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction unknownTypeMessage(type, suggestedTypes) {\n  var message = 'Unknown type \"' + String(type) + '\".';\n  if (suggestedTypes.length) {\n    message += ' Did you mean ' + (0, _quotedOrList2.default)(suggestedTypes) + '?';\n  }\n  return message;\n}\n\n/**\n * Known type names\n *\n * A GraphQL document is only valid if referenced types (specifically\n * variable definitions and fragment conditions) are defined by the type schema.\n */\nfunction KnownTypeNames(context) {\n  return {\n    // TODO: when validating IDL, re-enable these. Experimental version does not\n    // add unreferenced types, resulting in false-positive errors. Squelched\n    // errors for now.\n    ObjectTypeDefinition: function ObjectTypeDefinition() {\n      return false;\n    },\n    InterfaceTypeDefinition: function InterfaceTypeDefinition() {\n      return false;\n    },\n    UnionTypeDefinition: function UnionTypeDefinition() {\n      return false;\n    },\n    InputObjectTypeDefinition: function InputObjectTypeDefinition() {\n      return false;\n    },\n    NamedType: function NamedType(node) {\n      var schema = context.getSchema();\n      var typeName = node.name.value;\n      var type = schema.getType(typeName);\n      if (!type) {\n        context.reportError(new _error.GraphQLError(unknownTypeMessage(typeName, (0, _suggestionList2.default)(typeName, Object.keys(schema.getTypeMap()))), [node]));\n      }\n    }\n  };\n}"]},"metadata":{},"sourceType":"script"}