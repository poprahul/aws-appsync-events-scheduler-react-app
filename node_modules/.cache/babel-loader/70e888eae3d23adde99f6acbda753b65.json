{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar apollo_link_1 = require(\"apollo-link\");\n\nvar apollo_link_retry_1 = require(\"apollo-link-retry\");\n\nvar utils_1 = require(\"../utils\");\n\nvar ConflictResolutionLink =\n/** @class */\nfunction (_super) {\n  __extends(ConflictResolutionLink, _super);\n\n  function ConflictResolutionLink(conflictResolver, maxRetries) {\n    if (maxRetries === void 0) {\n      maxRetries = 10;\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.conflictResolver = conflictResolver;\n    _this.maxRetries = maxRetries;\n    _this.link = apollo_link_1.ApolloLink.from([new apollo_link_retry_1.RetryLink({\n      delay: {\n        initial: 0,\n        max: 0\n      },\n      attempts: function (count, operation, error) {\n        if (count > _this.maxRetries) {\n          return false;\n        }\n\n        if (_this.hasConflictError(error)) {\n          if (typeof _this.conflictResolver === 'function') {\n            var data = error.data;\n            var mutation = operation.query;\n            var mutationName = utils_1.getOperationFieldName(mutation);\n            var operationType = 'mutation';\n            var retries = count;\n\n            var variables = __assign({}, operation.variables);\n\n            var newVars = _this.conflictResolver({\n              data: data,\n              mutation: mutation,\n              mutationName: mutationName,\n              operationType: operationType,\n              retries: retries,\n              variables: variables\n            });\n\n            if (newVars === 'DISCARD') {\n              return false;\n            }\n\n            if (newVars) {\n              operation.variables = newVars;\n              return true;\n            }\n          }\n        }\n\n        return false;\n      }\n    }), new apollo_link_1.ApolloLink(function (op, fwd) {\n      return new apollo_link_1.Observable(function (observer) {\n        fwd(op).subscribe({\n          next: function (data) {\n            var err = (data.errors || []).find(_this.hasConflictError);\n\n            if (err) {\n              observer.error(err);\n            } else {\n              observer.next(__assign(__assign({}, data), {\n                context: __assign(__assign({}, data.context), {\n                  additionalDataContext: {\n                    newVars: op.variables\n                  }\n                })\n              }));\n            }\n          },\n          error: observer.error.bind(observer),\n          complete: observer.complete.bind(observer)\n        });\n        return function () {\n          return null;\n        };\n      });\n    })]);\n    return _this;\n  }\n\n  ConflictResolutionLink.prototype.hasConflictError = function (error) {\n    var hasConflictError = ['DynamoDB:ConditionalCheckFailedException'].some(function (err) {\n      return err === error.errorType;\n    });\n    return hasConflictError;\n  };\n\n  ConflictResolutionLink.prototype.request = function (operation, forward) {\n    if (typeof this.conflictResolver !== 'function') {\n      return utils_1.passthroughLink(operation, forward);\n    }\n\n    return this.link.request(operation, forward);\n  };\n\n  return ConflictResolutionLink;\n}(apollo_link_1.ApolloLink);\n\nexports.default = ConflictResolutionLink;","map":{"version":3,"sources":["/Users/poprahul/workspace/frontend/amplify-apps/calandarApp/aws-mobile-appsync-events-starter-react/node_modules/aws-appsync/lib/link/conflict-resolution-link.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","defineProperty","exports","value","apollo_link_1","require","apollo_link_retry_1","utils_1","ConflictResolutionLink","_super","conflictResolver","maxRetries","_this","link","ApolloLink","from","RetryLink","delay","initial","max","attempts","count","operation","error","hasConflictError","data","mutation","query","mutationName","getOperationFieldName","operationType","retries","variables","newVars","op","fwd","Observable","observer","subscribe","next","err","errors","find","context","additionalDataContext","bind","complete","some","errorType","request","forward","passthroughLink","default"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*!\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\nvar apollo_link_1 = require(\"apollo-link\");\nvar apollo_link_retry_1 = require(\"apollo-link-retry\");\nvar utils_1 = require(\"../utils\");\nvar ConflictResolutionLink = /** @class */ (function (_super) {\n    __extends(ConflictResolutionLink, _super);\n    function ConflictResolutionLink(conflictResolver, maxRetries) {\n        if (maxRetries === void 0) { maxRetries = 10; }\n        var _this = _super.call(this) || this;\n        _this.conflictResolver = conflictResolver;\n        _this.maxRetries = maxRetries;\n        _this.link = apollo_link_1.ApolloLink.from([\n            new apollo_link_retry_1.RetryLink({\n                delay: { initial: 0, max: 0 },\n                attempts: function (count, operation, error) {\n                    if (count > _this.maxRetries) {\n                        return false;\n                    }\n                    if (_this.hasConflictError(error)) {\n                        if (typeof _this.conflictResolver === 'function') {\n                            var data = error.data;\n                            var mutation = operation.query;\n                            var mutationName = utils_1.getOperationFieldName(mutation);\n                            var operationType = 'mutation';\n                            var retries = count;\n                            var variables = __assign({}, operation.variables);\n                            var newVars = _this.conflictResolver({\n                                data: data,\n                                mutation: mutation,\n                                mutationName: mutationName,\n                                operationType: operationType,\n                                retries: retries,\n                                variables: variables,\n                            });\n                            if (newVars === 'DISCARD') {\n                                return false;\n                            }\n                            if (newVars) {\n                                operation.variables = newVars;\n                                return true;\n                            }\n                        }\n                    }\n                    return false;\n                }\n            }),\n            new apollo_link_1.ApolloLink(function (op, fwd) { return new apollo_link_1.Observable(function (observer) {\n                fwd(op).subscribe({\n                    next: function (data) {\n                        var err = (data.errors || []).find(_this.hasConflictError);\n                        if (err) {\n                            observer.error(err);\n                        }\n                        else {\n                            observer.next(__assign(__assign({}, data), { context: __assign(__assign({}, data.context), { additionalDataContext: {\n                                        newVars: op.variables,\n                                    } }) }));\n                        }\n                    },\n                    error: observer.error.bind(observer),\n                    complete: observer.complete.bind(observer),\n                });\n                return function () { return null; };\n            }); })\n        ]);\n        return _this;\n    }\n    ConflictResolutionLink.prototype.hasConflictError = function (error) {\n        var hasConflictError = [\n            'DynamoDB:ConditionalCheckFailedException'\n        ].some(function (err) { return err === error.errorType; });\n        return hasConflictError;\n    };\n    ConflictResolutionLink.prototype.request = function (operation, forward) {\n        if (typeof this.conflictResolver !== 'function') {\n            return utils_1.passthroughLink(operation, forward);\n        }\n        return this.link.request(operation, forward);\n    };\n    return ConflictResolutionLink;\n}(apollo_link_1.ApolloLink));\nexports.default = ConflictResolutionLink;\n"]},"metadata":{},"sourceType":"script"}