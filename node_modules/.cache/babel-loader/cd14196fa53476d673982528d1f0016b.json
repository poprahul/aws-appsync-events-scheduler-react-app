{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.singleFieldOnlyMessage = singleFieldOnlyMessage;\nexports.SingleFieldSubscriptions = SingleFieldSubscriptions;\n\nvar _error = require('../../error');\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n\nfunction singleFieldOnlyMessage(name) {\n  return (name ? 'Subscription \"' + name + '\" ' : 'Anonymous Subscription ') + 'must select only one top level field.';\n}\n/**\n * Subscriptions must only include one field.\n *\n * A GraphQL subscription is valid only if it contains a single root field.\n */\n\n\nfunction SingleFieldSubscriptions(context) {\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      if (node.operation === 'subscription') {\n        if (node.selectionSet.selections.length !== 1) {\n          context.reportError(new _error.GraphQLError(singleFieldOnlyMessage(node.name && node.name.value), node.selectionSet.selections.slice(1)));\n        }\n      }\n    }\n  };\n}","map":{"version":3,"sources":["/Users/poprahul/workspace/frontend/amplify-apps/calandarApp/aws-mobile-appsync-events-starter-react/node_modules/graphql/validation/rules/SingleFieldSubscriptions.js"],"names":["Object","defineProperty","exports","value","singleFieldOnlyMessage","SingleFieldSubscriptions","_error","require","name","context","OperationDefinition","node","operation","selectionSet","selections","length","reportError","GraphQLError","slice"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,sBAAR,GAAiCA,sBAAjC;AACAF,OAAO,CAACG,wBAAR,GAAmCA,wBAAnC;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,aAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASH,sBAAT,CAAgCI,IAAhC,EAAsC;AACpC,SAAO,CAACA,IAAI,GAAG,mBAAmBA,IAAnB,GAA0B,IAA7B,GAAoC,yBAAzC,IAAsE,uCAA7E;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASH,wBAAT,CAAkCI,OAAlC,EAA2C;AACzC,SAAO;AACLC,IAAAA,mBAAmB,EAAE,SAASA,mBAAT,CAA6BC,IAA7B,EAAmC;AACtD,UAAIA,IAAI,CAACC,SAAL,KAAmB,cAAvB,EAAuC;AACrC,YAAID,IAAI,CAACE,YAAL,CAAkBC,UAAlB,CAA6BC,MAA7B,KAAwC,CAA5C,EAA+C;AAC7CN,UAAAA,OAAO,CAACO,WAAR,CAAoB,IAAIV,MAAM,CAACW,YAAX,CAAwBb,sBAAsB,CAACO,IAAI,CAACH,IAAL,IAAaG,IAAI,CAACH,IAAL,CAAUL,KAAxB,CAA9C,EAA8EQ,IAAI,CAACE,YAAL,CAAkBC,UAAlB,CAA6BI,KAA7B,CAAmC,CAAnC,CAA9E,CAApB;AACD;AACF;AACF;AAPI,GAAP;AASD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.singleFieldOnlyMessage = singleFieldOnlyMessage;\nexports.SingleFieldSubscriptions = SingleFieldSubscriptions;\n\nvar _error = require('../../error');\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction singleFieldOnlyMessage(name) {\n  return (name ? 'Subscription \"' + name + '\" ' : 'Anonymous Subscription ') + 'must select only one top level field.';\n}\n\n/**\n * Subscriptions must only include one field.\n *\n * A GraphQL subscription is valid only if it contains a single root field.\n */\nfunction SingleFieldSubscriptions(context) {\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      if (node.operation === 'subscription') {\n        if (node.selectionSet.selections.length !== 1) {\n          context.reportError(new _error.GraphQLError(singleFieldOnlyMessage(node.name && node.name.value), node.selectionSet.selections.slice(1)));\n        }\n      }\n    }\n  };\n}"]},"metadata":{},"sourceType":"script"}