{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar apollo_link_1 = require(\"apollo-link\");\n\nvar utils_1 = require(\"./utils\");\n\nvar aws_appsync_auth_link_1 = require(\"aws-appsync-auth-link\");\n\nvar graphql_1 = require(\"graphql\");\n\nvar url = require(\"url\");\n\nvar uuid_1 = require(\"uuid\");\n\nvar types_1 = require(\"./types\");\n\nvar retry_1 = require(\"./utils/retry\");\n\nvar logger = utils_1.rootLogger.extend(\"subscriptions\");\nexports.CONTROL_EVENTS_KEY = \"@@controlEvents\";\nvar NON_RETRYABLE_CODES = [400, 401, 403];\nvar SERVICE = \"appsync\";\nvar APPSYNC_REALTIME_HEADERS = {\n  accept: 'application/json, text/javascript',\n  'content-encoding': 'amz-1.0',\n  'content-type': 'application/json; charset=UTF-8'\n};\n/**\n * Time in milliseconds to wait for GQL_CONNECTION_INIT message\n */\n\nvar CONNECTION_INIT_TIMEOUT = 15000;\n/**\n * Time in milliseconds to wait for GQL_START_ACK message\n */\n\nvar START_ACK_TIMEOUT = 15000;\n/**\n * Default Time in milliseconds to wait for GQL_CONNECTION_KEEP_ALIVE message\n */\n\nvar DEFAULT_KEEP_ALIVE_TIMEOUT = 5 * 60 * 1000;\n\nvar AppSyncRealTimeSubscriptionHandshakeLink =\n/** @class */\nfunction (_super) {\n  __extends(AppSyncRealTimeSubscriptionHandshakeLink, _super);\n\n  function AppSyncRealTimeSubscriptionHandshakeLink(_a) {\n    var theUrl = _a.url,\n        theRegion = _a.region,\n        theAuth = _a.auth;\n\n    var _this = _super.call(this) || this;\n\n    _this.socketStatus = types_1.SOCKET_STATUS.CLOSED;\n    _this.keepAliveTimeout = DEFAULT_KEEP_ALIVE_TIMEOUT;\n    _this.subscriptionObserverMap = new Map();\n    _this.promiseArray = [];\n    _this.url = theUrl;\n    _this.region = theRegion;\n    _this.auth = theAuth;\n    return _this;\n  }\n\n  AppSyncRealTimeSubscriptionHandshakeLink.prototype.request = function (operation) {\n    var _a;\n\n    var _this = this;\n\n    var query = operation.query,\n        variables = operation.variables;\n\n    var _b = operation.getContext(),\n        _c = _b.controlMessages,\n        _d = exports.CONTROL_EVENTS_KEY,\n        controlEvents = (_c === void 0 ? (_a = {}, _a[exports.CONTROL_EVENTS_KEY] = undefined, _a) : _c)[_d],\n        headers = _b.headers;\n\n    return new apollo_link_1.Observable(function (observer) {\n      var subscriptionId = uuid_1.v4();\n      var options = {\n        appSyncGraphqlEndpoint: _this.url,\n        authenticationType: _this.auth.type,\n        query: graphql_1.print(query),\n        region: _this.region,\n        graphql_headers: function () {\n          return headers;\n        },\n        variables: variables,\n        apiKey: _this.auth.type === aws_appsync_auth_link_1.AUTH_TYPE.API_KEY ? _this.auth.apiKey : \"\",\n        credentials: _this.auth.type === aws_appsync_auth_link_1.AUTH_TYPE.AWS_IAM ? _this.auth.credentials : null,\n        jwtToken: _this.auth.type === aws_appsync_auth_link_1.AUTH_TYPE.AMAZON_COGNITO_USER_POOLS || _this.auth.type === aws_appsync_auth_link_1.AUTH_TYPE.OPENID_CONNECT ? _this.auth.jwtToken : null\n      };\n\n      _this._startSubscriptionWithAWSAppSyncRealTime({\n        options: options,\n        observer: observer,\n        subscriptionId: subscriptionId\n      });\n\n      return function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var subscriptionState;\n          return __generator(this, function (_a) {\n            // Cleanup after unsubscribing or observer.complete was called after _startSubscriptionWithAWSAppSyncRealTime\n            try {\n              this._verifySubscriptionAlreadyStarted(subscriptionId);\n\n              subscriptionState = this.subscriptionObserverMap.get(subscriptionId).subscriptionState;\n\n              if (subscriptionState === types_1.SUBSCRIPTION_STATUS.CONNECTED) {\n                this._sendUnsubscriptionMessage(subscriptionId);\n              } else {\n                throw new Error(\"Subscription has failed, starting to remove subscription.\");\n              }\n            } catch (err) {\n              this._removeSubscriptionObserver(subscriptionId);\n\n              return [2\n              /*return*/\n              ];\n            }\n\n            return [2\n            /*return*/\n            ];\n          });\n        });\n      };\n    }).filter(function (data) {\n      var _a = data.extensions,\n          _b = (_a === void 0 ? {} : _a).controlMsgType,\n          controlMsgType = _b === void 0 ? undefined : _b;\n      var isControlMsg = typeof controlMsgType !== \"undefined\";\n      return controlEvents === true || !isControlMsg;\n    });\n  };\n\n  AppSyncRealTimeSubscriptionHandshakeLink.prototype._verifySubscriptionAlreadyStarted = function (subscriptionId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var subscriptionState;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        subscriptionState = this.subscriptionObserverMap.get(subscriptionId).subscriptionState; // This in case unsubscribe is invoked before sending start subscription message\n\n        if (subscriptionState === types_1.SUBSCRIPTION_STATUS.PENDING) {\n          return [2\n          /*return*/\n          , new Promise(function (res, rej) {\n            var _a = _this.subscriptionObserverMap.get(subscriptionId),\n                observer = _a.observer,\n                subscriptionState = _a.subscriptionState,\n                variables = _a.variables,\n                query = _a.query;\n\n            _this.subscriptionObserverMap.set(subscriptionId, {\n              observer: observer,\n              subscriptionState: subscriptionState,\n              variables: variables,\n              query: query,\n              subscriptionReadyCallback: res,\n              subscriptionFailedCallback: rej\n            });\n          })];\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  AppSyncRealTimeSubscriptionHandshakeLink.prototype._sendUnsubscriptionMessage = function (subscriptionId) {\n    try {\n      if (this.awsRealTimeSocket && this.awsRealTimeSocket.readyState === WebSocket.OPEN && this.socketStatus === types_1.SOCKET_STATUS.READY) {\n        // Preparing unsubscribe message to stop receiving messages for that subscription\n        var unsubscribeMessage = {\n          id: subscriptionId,\n          type: types_1.MESSAGE_TYPES.GQL_STOP\n        };\n        var stringToAWSRealTime = JSON.stringify(unsubscribeMessage);\n        this.awsRealTimeSocket.send(stringToAWSRealTime);\n\n        this._removeSubscriptionObserver(subscriptionId);\n      }\n    } catch (err) {\n      // If GQL_STOP is not sent because of disconnection issue, then there is nothing the client can do\n      logger({\n        err: err\n      });\n    }\n  };\n\n  AppSyncRealTimeSubscriptionHandshakeLink.prototype._removeSubscriptionObserver = function (subscriptionId) {\n    this.subscriptionObserverMap.delete(subscriptionId);\n\n    if (this.subscriptionObserverMap.size === 0) {\n      // Socket could be sending data to unsubscribe so is required to wait until is flushed\n      this._closeSocketWhenFlushed();\n    }\n  };\n\n  AppSyncRealTimeSubscriptionHandshakeLink.prototype._closeSocketWhenFlushed = function () {\n    logger(\"closing WebSocket...\");\n    clearTimeout(this.keepAliveTimeoutId);\n\n    if (!this.awsRealTimeSocket) {\n      this.socketStatus = types_1.SOCKET_STATUS.CLOSED;\n      return;\n    }\n\n    if (this.awsRealTimeSocket.bufferedAmount > 0) {\n      setTimeout(this._closeSocketWhenFlushed.bind(this), 1000);\n    } else {\n      var tempSocket = this.awsRealTimeSocket;\n      tempSocket.close(1000);\n      this.awsRealTimeSocket = null;\n      this.socketStatus = types_1.SOCKET_STATUS.CLOSED;\n    }\n  };\n\n  AppSyncRealTimeSubscriptionHandshakeLink.prototype._startSubscriptionWithAWSAppSyncRealTime = function (_a) {\n    var options = _a.options,\n        observer = _a.observer,\n        subscriptionId = _a.subscriptionId;\n    return __awaiter(this, void 0, void 0, function () {\n      var appSyncGraphqlEndpoint, authenticationType, query, variables, apiKey, region, _b, graphql_headers, credentials, jwtToken, subscriptionState, data, dataString, headerObj, _c, subscriptionMessage, stringToAWSRealTime, err_1, _d, message, _e, subscriptionFailedCallback_1, _f, subscriptionFailedCallback, subscriptionReadyCallback;\n\n      var _g;\n\n      var _this = this;\n\n      return __generator(this, function (_h) {\n        switch (_h.label) {\n          case 0:\n            appSyncGraphqlEndpoint = options.appSyncGraphqlEndpoint, authenticationType = options.authenticationType, query = options.query, variables = options.variables, apiKey = options.apiKey, region = options.region, _b = options.graphql_headers, graphql_headers = _b === void 0 ? function () {\n              return {};\n            } : _b, credentials = options.credentials, jwtToken = options.jwtToken;\n            subscriptionState = types_1.SUBSCRIPTION_STATUS.PENDING;\n            data = {\n              query: query,\n              variables: variables\n            }; // Having a subscription id map will make it simple to forward messages received\n\n            this.subscriptionObserverMap.set(subscriptionId, {\n              observer: observer,\n              query: query,\n              variables: variables,\n              subscriptionState: subscriptionState\n            });\n            dataString = JSON.stringify(data);\n            _c = [__assign({}, graphql_headers())];\n            return [4\n            /*yield*/\n            , this._awsRealTimeHeaderBasedAuth({\n              apiKey: apiKey,\n              appSyncGraphqlEndpoint: appSyncGraphqlEndpoint,\n              authenticationType: authenticationType,\n              payload: dataString,\n              canonicalUri: \"\",\n              region: region,\n              credentials: credentials,\n              jwtToken: jwtToken\n            })];\n\n          case 1:\n            headerObj = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), (_g = {}, _g[aws_appsync_auth_link_1.USER_AGENT_HEADER] = aws_appsync_auth_link_1.USER_AGENT, _g)]);\n            subscriptionMessage = {\n              id: subscriptionId,\n              payload: {\n                data: dataString,\n                extensions: {\n                  authorization: __assign({}, headerObj)\n                }\n              },\n              type: types_1.MESSAGE_TYPES.GQL_START\n            };\n            stringToAWSRealTime = JSON.stringify(subscriptionMessage);\n            _h.label = 2;\n\n          case 2:\n            _h.trys.push([2, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , this._initializeWebSocketConnection({\n              apiKey: apiKey,\n              appSyncGraphqlEndpoint: appSyncGraphqlEndpoint,\n              authenticationType: authenticationType,\n              region: region,\n              credentials: credentials,\n              jwtToken: jwtToken\n            })];\n\n          case 3:\n            _h.sent();\n\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            err_1 = _h.sent();\n            _d = err_1.message, message = _d === void 0 ? \"\" : _d;\n            observer.error({\n              errors: [__assign({}, new graphql_1.GraphQLError(\"Connection failed: \" + message))]\n            });\n            observer.complete();\n            _e = (this.subscriptionObserverMap.get(subscriptionId) || {}).subscriptionFailedCallback, subscriptionFailedCallback_1 = _e === void 0 ? null : _e; // Notify concurrent unsubscription\n\n            if (typeof subscriptionFailedCallback_1 === \"function\") {\n              subscriptionFailedCallback_1();\n            }\n\n            return [2\n            /*return*/\n            ];\n\n          case 5:\n            _f = this.subscriptionObserverMap.get(subscriptionId), subscriptionFailedCallback = _f.subscriptionFailedCallback, subscriptionReadyCallback = _f.subscriptionReadyCallback; // This must be done before sending the message in order to be listening immediately\n\n            this.subscriptionObserverMap.set(subscriptionId, {\n              observer: observer,\n              subscriptionState: subscriptionState,\n              variables: variables,\n              query: query,\n              subscriptionReadyCallback: subscriptionReadyCallback,\n              subscriptionFailedCallback: subscriptionFailedCallback,\n              startAckTimeoutId: setTimeout(function () {\n                _this._timeoutStartSubscriptionAck.call(_this, subscriptionId);\n              }, START_ACK_TIMEOUT)\n            });\n            this.awsRealTimeSocket.send(stringToAWSRealTime);\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AppSyncRealTimeSubscriptionHandshakeLink.prototype._initializeWebSocketConnection = function (_a) {\n    var _this = this;\n\n    var appSyncGraphqlEndpoint = _a.appSyncGraphqlEndpoint,\n        authenticationType = _a.authenticationType,\n        apiKey = _a.apiKey,\n        region = _a.region,\n        credentials = _a.credentials,\n        jwtToken = _a.jwtToken;\n\n    if (this.socketStatus === types_1.SOCKET_STATUS.READY) {\n      return Promise.resolve();\n    }\n\n    return new Promise(function (res, rej) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var discoverableEndpoint, payloadString, headerString, _a, _b, headerQs, payloadQs, awsRealTimeUrl, err_2;\n\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              this.promiseArray.push({\n                res: res,\n                rej: rej\n              });\n              if (!(this.socketStatus === types_1.SOCKET_STATUS.CLOSED)) return [3\n              /*break*/\n              , 5];\n              _c.label = 1;\n\n            case 1:\n              _c.trys.push([1, 4,, 5]);\n\n              this.socketStatus = types_1.SOCKET_STATUS.CONNECTING;\n              discoverableEndpoint = AppSyncRealTimeSubscriptionHandshakeLink._discoverAppSyncRealTimeEndpoint(this.url);\n              payloadString = \"{}\";\n              _b = (_a = JSON).stringify;\n              return [4\n              /*yield*/\n              , this._awsRealTimeHeaderBasedAuth({\n                authenticationType: authenticationType,\n                payload: payloadString,\n                canonicalUri: \"/connect\",\n                apiKey: apiKey,\n                appSyncGraphqlEndpoint: appSyncGraphqlEndpoint,\n                region: region,\n                credentials: credentials,\n                jwtToken: jwtToken\n              })];\n\n            case 2:\n              headerString = _b.apply(_a, [_c.sent()]);\n              headerQs = Buffer.from(headerString).toString(\"base64\");\n              payloadQs = Buffer.from(payloadString).toString(\"base64\");\n              awsRealTimeUrl = discoverableEndpoint + \"?header=\" + headerQs + \"&payload=\" + payloadQs;\n              return [4\n              /*yield*/\n              , this._initializeRetryableHandshake({\n                awsRealTimeUrl: awsRealTimeUrl\n              })];\n\n            case 3:\n              _c.sent();\n\n              this.promiseArray.forEach(function (_a) {\n                var res = _a.res;\n                logger(\"Notifying connection successful\");\n                res();\n              });\n              this.socketStatus = types_1.SOCKET_STATUS.READY;\n              this.promiseArray = [];\n              return [3\n              /*break*/\n              , 5];\n\n            case 4:\n              err_2 = _c.sent();\n              this.promiseArray.forEach(function (_a) {\n                var rej = _a.rej;\n                return rej(err_2);\n              });\n              this.promiseArray = [];\n\n              if (this.awsRealTimeSocket && this.awsRealTimeSocket.readyState === WebSocket.OPEN) {\n                this.awsRealTimeSocket.close(3001);\n              }\n\n              this.awsRealTimeSocket = null;\n              this.socketStatus = types_1.SOCKET_STATUS.CLOSED;\n              return [3\n              /*break*/\n              , 5];\n\n            case 5:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    });\n  };\n\n  AppSyncRealTimeSubscriptionHandshakeLink.prototype._awsRealTimeHeaderBasedAuth = function (_a) {\n    var authenticationType = _a.authenticationType,\n        payload = _a.payload,\n        canonicalUri = _a.canonicalUri,\n        appSyncGraphqlEndpoint = _a.appSyncGraphqlEndpoint,\n        apiKey = _a.apiKey,\n        region = _a.region,\n        credentials = _a.credentials,\n        jwtToken = _a.jwtToken;\n    return __awaiter(this, void 0, void 0, function () {\n      var headerHandler, handler, host, result;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            headerHandler = {\n              API_KEY: this._awsRealTimeApiKeyHeader.bind(this),\n              AWS_IAM: this._awsRealTimeIAMHeader.bind(this),\n              OPENID_CONNECT: this._awsRealTimeOPENIDHeader.bind(this),\n              AMAZON_COGNITO_USER_POOLS: this._awsRealTimeOPENIDHeader.bind(this)\n            };\n            handler = headerHandler[authenticationType];\n\n            if (typeof handler !== \"function\") {\n              logger(\"Authentication type \" + authenticationType + \" not supported\");\n              return [2\n              /*return*/\n              , {}];\n            }\n\n            host = url.parse(appSyncGraphqlEndpoint).host;\n            return [4\n            /*yield*/\n            , handler({\n              payload: payload,\n              canonicalUri: canonicalUri,\n              appSyncGraphqlEndpoint: appSyncGraphqlEndpoint,\n              apiKey: apiKey,\n              region: region,\n              host: host,\n              credentials: credentials,\n              jwtToken: jwtToken\n            })];\n\n          case 1:\n            result = _b.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n\n  AppSyncRealTimeSubscriptionHandshakeLink.prototype._awsRealTimeOPENIDHeader = function (_a) {\n    var host = _a.host,\n        jwtToken = _a.jwtToken;\n    return __awaiter(this, void 0, void 0, function () {\n      var _b, _c;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            _b = {};\n            if (!(typeof jwtToken === \"function\")) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , jwtToken.call(undefined)];\n\n          case 1:\n            _c = _d.sent();\n            return [3\n            /*break*/\n            , 4];\n\n          case 2:\n            return [4\n            /*yield*/\n            , jwtToken];\n\n          case 3:\n            _c = _d.sent();\n            _d.label = 4;\n\n          case 4:\n            return [2\n            /*return*/\n            , (_b.Authorization = _c, _b.host = host, _b)];\n        }\n      });\n    });\n  };\n\n  AppSyncRealTimeSubscriptionHandshakeLink.prototype._awsRealTimeApiKeyHeader = function (_a) {\n    var apiKey = _a.apiKey,\n        host = _a.host;\n    return __awaiter(this, void 0, void 0, function () {\n      var dt, dtStr;\n      return __generator(this, function (_b) {\n        dt = new Date();\n        dtStr = dt.toISOString().replace(/[:\\-]|\\.\\d{3}/g, \"\");\n        return [2\n        /*return*/\n        , {\n          host: host,\n          \"x-amz-date\": dtStr,\n          \"x-api-key\": apiKey\n        }];\n      });\n    });\n  };\n\n  AppSyncRealTimeSubscriptionHandshakeLink.prototype._awsRealTimeIAMHeader = function (_a) {\n    var payload = _a.payload,\n        canonicalUri = _a.canonicalUri,\n        appSyncGraphqlEndpoint = _a.appSyncGraphqlEndpoint,\n        region = _a.region,\n        credentials = _a.credentials;\n    return __awaiter(this, void 0, void 0, function () {\n      var endpointInfo, creds, _b, accessKeyId, secretAccessKey, sessionToken, formattedCredentials, request, signed_params;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            endpointInfo = {\n              region: region,\n              service: SERVICE\n            };\n            creds = typeof credentials === \"function\" ? credentials.call() : credentials || {};\n            if (!(creds && typeof creds.getPromise === \"function\")) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , creds.getPromise()];\n\n          case 1:\n            _c.sent();\n\n            _c.label = 2;\n\n          case 2:\n            if (!creds) {\n              throw new Error(\"No credentials\");\n            }\n\n            return [4\n            /*yield*/\n            , creds];\n\n          case 3:\n            _b = _c.sent(), accessKeyId = _b.accessKeyId, secretAccessKey = _b.secretAccessKey, sessionToken = _b.sessionToken;\n            formattedCredentials = {\n              access_key: accessKeyId,\n              secret_key: secretAccessKey,\n              session_token: sessionToken\n            };\n            request = {\n              url: \"\" + appSyncGraphqlEndpoint + canonicalUri,\n              body: payload,\n              method: \"POST\",\n              headers: __assign({}, APPSYNC_REALTIME_HEADERS)\n            };\n            signed_params = aws_appsync_auth_link_1.Signer.sign(request, formattedCredentials, endpointInfo);\n            return [2\n            /*return*/\n            , signed_params.headers];\n        }\n      });\n    });\n  };\n\n  AppSyncRealTimeSubscriptionHandshakeLink.prototype._initializeRetryableHandshake = function (_a) {\n    var awsRealTimeUrl = _a.awsRealTimeUrl;\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            logger(\"Initializaling retryable Handshake\");\n            return [4\n            /*yield*/\n            , retry_1.jitteredExponentialRetry(this._initializeHandshake.bind(this), [{\n              awsRealTimeUrl: awsRealTimeUrl\n            }])];\n\n          case 1:\n            _b.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AppSyncRealTimeSubscriptionHandshakeLink.prototype._initializeHandshake = function (_a) {\n    var awsRealTimeUrl = _a.awsRealTimeUrl;\n    return __awaiter(this, void 0, void 0, function () {\n      var err_3, errorType, errorCode;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            logger(\"Initializing handshake \" + awsRealTimeUrl);\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , function () {\n              return new Promise(function (res, rej) {\n                var newSocket = AppSyncRealTimeSubscriptionHandshakeLink.createWebSocket(awsRealTimeUrl, \"graphql-ws\");\n\n                newSocket.onerror = function () {\n                  logger(\"WebSocket connection error\");\n                };\n\n                newSocket.onclose = function () {\n                  rej(new Error(\"Connection handshake error\"));\n                };\n\n                newSocket.onopen = function () {\n                  _this.awsRealTimeSocket = newSocket;\n                  return res();\n                };\n              });\n            }()];\n\n          case 2:\n            _b.sent(); // Step 2: wait for ack from AWS AppSyncReaTime after sending init\n\n\n            return [4\n            /*yield*/\n            , function () {\n              return new Promise(function (res, rej) {\n                var ackOk = false;\n\n                _this.awsRealTimeSocket.onerror = function (error) {\n                  logger(\"WebSocket closed \" + JSON.stringify(error));\n                };\n\n                _this.awsRealTimeSocket.onclose = function (event) {\n                  logger(\"WebSocket closed \" + event.reason);\n                  rej(new Error(JSON.stringify(event)));\n                };\n\n                _this.awsRealTimeSocket.onmessage = function (message) {\n                  logger(\"subscription message from AWS AppSyncRealTime: \" + message.data + \" \");\n                  var data = JSON.parse(message.data);\n                  var type = data.type,\n                      _a = data.payload,\n                      _b = (_a === void 0 ? {} : _a).connectionTimeoutMs,\n                      connectionTimeoutMs = _b === void 0 ? DEFAULT_KEEP_ALIVE_TIMEOUT : _b;\n\n                  if (type === types_1.MESSAGE_TYPES.GQL_CONNECTION_ACK) {\n                    ackOk = true;\n                    _this.keepAliveTimeout = connectionTimeoutMs;\n                    _this.awsRealTimeSocket.onmessage = _this._handleIncomingSubscriptionMessage.bind(_this);\n                    res(\"Cool, connected to AWS AppSyncRealTime\");\n                    return;\n                  }\n\n                  if (type === types_1.MESSAGE_TYPES.GQL_CONNECTION_ERROR) {\n                    var _c = data.payload,\n                        _d = (_c === void 0 ? {} : _c).errors,\n                        _e = (_d === void 0 ? [] : _d)[0],\n                        _f = _e === void 0 ? {} : _e,\n                        _g = _f.errorType,\n                        errorType = _g === void 0 ? \"\" : _g,\n                        _h = _f.errorCode,\n                        errorCode = _h === void 0 ? 0 : _h;\n\n                    rej({\n                      errorType: errorType,\n                      errorCode: errorCode\n                    });\n                  }\n                };\n\n                var gqlInit = {\n                  type: types_1.MESSAGE_TYPES.GQL_CONNECTION_INIT\n                };\n\n                _this.awsRealTimeSocket.send(JSON.stringify(gqlInit));\n\n                function checkAckOk() {\n                  if (!ackOk) {\n                    rej(new Error(\"Connection timeout: ack from AWSRealTime was not received on \" + CONNECTION_INIT_TIMEOUT + \" ms\"));\n                  }\n                }\n\n                setTimeout(checkAckOk.bind(_this), CONNECTION_INIT_TIMEOUT);\n              });\n            }()];\n\n          case 3:\n            // Step 2: wait for ack from AWS AppSyncReaTime after sending init\n            _b.sent();\n\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            err_3 = _b.sent();\n            errorType = err_3.errorType, errorCode = err_3.errorCode;\n\n            if (NON_RETRYABLE_CODES.indexOf(errorCode) >= 0) {\n              throw new retry_1.NonRetryableError(errorType);\n            } else if (errorType) {\n              throw new Error(errorType);\n            } else {\n              throw err_3;\n            }\n\n            return [3\n            /*break*/\n            , 5];\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AppSyncRealTimeSubscriptionHandshakeLink.prototype._handleIncomingSubscriptionMessage = function (message) {\n    logger(\"subscription message from AWS AppSync RealTime: \" + message.data);\n\n    var _a = JSON.parse(message.data),\n        _b = _a.id,\n        id = _b === void 0 ? \"\" : _b,\n        payload = _a.payload,\n        type = _a.type;\n\n    var _c = this.subscriptionObserverMap.get(id) || {},\n        _d = _c.observer,\n        observer = _d === void 0 ? null : _d,\n        _e = _c.query,\n        query = _e === void 0 ? \"\" : _e,\n        _f = _c.variables,\n        variables = _f === void 0 ? {} : _f,\n        _g = _c.startAckTimeoutId,\n        startAckTimeoutId = _g === void 0 ? 0 : _g,\n        _h = _c.subscriptionReadyCallback,\n        subscriptionReadyCallback = _h === void 0 ? null : _h,\n        _j = _c.subscriptionFailedCallback,\n        subscriptionFailedCallback = _j === void 0 ? null : _j;\n\n    logger({\n      id: id,\n      observer: observer,\n      query: query,\n      variables: variables\n    });\n\n    if (type === types_1.MESSAGE_TYPES.GQL_DATA && payload && payload.data) {\n      if (observer) {\n        observer.next(payload);\n      } else {\n        logger(\"observer not found for id: \" + id);\n      }\n\n      return;\n    }\n\n    if (type === types_1.MESSAGE_TYPES.GQL_START_ACK) {\n      logger(\"subscription ready for \" + JSON.stringify({\n        query: query,\n        variables: variables\n      }));\n\n      if (typeof subscriptionReadyCallback === \"function\") {\n        subscriptionReadyCallback();\n      }\n\n      clearTimeout(startAckTimeoutId);\n\n      if (observer) {\n        observer.next({\n          data: payload,\n          extensions: {\n            controlMsgType: \"CONNECTED\"\n          }\n        });\n      } else {\n        logger(\"observer not found for id: \" + id);\n      }\n\n      var subscriptionState = types_1.SUBSCRIPTION_STATUS.CONNECTED;\n      this.subscriptionObserverMap.set(id, {\n        observer: observer,\n        query: query,\n        variables: variables,\n        startAckTimeoutId: null,\n        subscriptionState: subscriptionState,\n        subscriptionReadyCallback: subscriptionReadyCallback,\n        subscriptionFailedCallback: subscriptionFailedCallback\n      });\n      return;\n    }\n\n    if (type === types_1.MESSAGE_TYPES.GQL_CONNECTION_KEEP_ALIVE) {\n      clearTimeout(this.keepAliveTimeoutId);\n      this.keepAliveTimeoutId = setTimeout(this._timeoutDisconnect.bind(this), this.keepAliveTimeout);\n      return;\n    }\n\n    if (type === types_1.MESSAGE_TYPES.GQL_ERROR) {\n      var subscriptionState = types_1.SUBSCRIPTION_STATUS.FAILED;\n      this.subscriptionObserverMap.set(id, {\n        observer: observer,\n        query: query,\n        variables: variables,\n        startAckTimeoutId: startAckTimeoutId,\n        subscriptionReadyCallback: subscriptionReadyCallback,\n        subscriptionFailedCallback: subscriptionFailedCallback,\n        subscriptionState: subscriptionState\n      });\n      observer.error({\n        errors: [__assign({}, new graphql_1.GraphQLError(\"Connection failed: \" + JSON.stringify(payload)))]\n      });\n      clearTimeout(startAckTimeoutId);\n      observer.complete();\n\n      if (typeof subscriptionFailedCallback === \"function\") {\n        subscriptionFailedCallback();\n      }\n    }\n  };\n\n  AppSyncRealTimeSubscriptionHandshakeLink.prototype._timeoutDisconnect = function () {\n    this.subscriptionObserverMap.forEach(function (_a) {\n      var observer = _a.observer;\n      observer.error({\n        errors: [__assign({}, new graphql_1.GraphQLError(\"Timeout disconnect\"))]\n      });\n      observer.complete();\n    });\n    this.subscriptionObserverMap = new Map();\n\n    if (this.awsRealTimeSocket) {\n      this.awsRealTimeSocket.close();\n    }\n\n    this.socketStatus = types_1.SOCKET_STATUS.CLOSED;\n  };\n\n  AppSyncRealTimeSubscriptionHandshakeLink.prototype._timeoutStartSubscriptionAck = function (subscriptionId) {\n    var _a = this.subscriptionObserverMap.get(subscriptionId),\n        observer = _a.observer,\n        query = _a.query,\n        variables = _a.variables;\n\n    this.subscriptionObserverMap.set(subscriptionId, {\n      observer: observer,\n      query: query,\n      variables: variables,\n      subscriptionState: types_1.SUBSCRIPTION_STATUS.FAILED\n    });\n    observer.error({\n      errors: [__assign({}, new graphql_1.GraphQLError(\"Subscription timeout \" + JSON.stringify({\n        query: query,\n        variables: variables\n      })))]\n    }); // Cleanup will be automatically executed\n\n    observer.complete();\n    logger(\"timeoutStartSubscription\", JSON.stringify({\n      query: query,\n      variables: variables\n    }));\n  };\n\n  AppSyncRealTimeSubscriptionHandshakeLink.createWebSocket = function (awsRealTimeUrl, protocol) {\n    return new WebSocket(awsRealTimeUrl, protocol);\n  };\n\n  AppSyncRealTimeSubscriptionHandshakeLink._discoverAppSyncRealTimeEndpoint = function (url) {\n    return url.replace(\"https://\", \"wss://\").replace('http://', 'ws://').replace(\"appsync-api\", \"appsync-realtime-api\").replace(\"gogi-beta\", \"grt-beta\");\n  };\n\n  return AppSyncRealTimeSubscriptionHandshakeLink;\n}(apollo_link_1.ApolloLink);\n\nexports.AppSyncRealTimeSubscriptionHandshakeLink = AppSyncRealTimeSubscriptionHandshakeLink;","map":{"version":3,"sources":["/Users/poprahul/workspace/frontend/amplify-apps/calandarApp/aws-mobile-appsync-events-starter-react/node_modules/aws-appsync-subscription-link/lib/realtime-subscription-handshake-link.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","defineProperty","exports","apollo_link_1","require","utils_1","aws_appsync_auth_link_1","graphql_1","url","uuid_1","types_1","retry_1","logger","rootLogger","extend","CONTROL_EVENTS_KEY","NON_RETRYABLE_CODES","SERVICE","APPSYNC_REALTIME_HEADERS","accept","CONNECTION_INIT_TIMEOUT","START_ACK_TIMEOUT","DEFAULT_KEEP_ALIVE_TIMEOUT","AppSyncRealTimeSubscriptionHandshakeLink","_super","_a","theUrl","theRegion","region","theAuth","auth","_this","socketStatus","SOCKET_STATUS","CLOSED","keepAliveTimeout","subscriptionObserverMap","Map","promiseArray","request","operation","query","variables","_b","getContext","_c","controlMessages","_d","controlEvents","undefined","headers","Observable","observer","subscriptionId","v4","options","appSyncGraphqlEndpoint","authenticationType","type","print","graphql_headers","apiKey","AUTH_TYPE","API_KEY","credentials","AWS_IAM","jwtToken","AMAZON_COGNITO_USER_POOLS","OPENID_CONNECT","_startSubscriptionWithAWSAppSyncRealTime","subscriptionState","_verifySubscriptionAlreadyStarted","get","SUBSCRIPTION_STATUS","CONNECTED","_sendUnsubscriptionMessage","Error","err","_removeSubscriptionObserver","filter","data","extensions","controlMsgType","isControlMsg","PENDING","res","rej","set","subscriptionReadyCallback","subscriptionFailedCallback","awsRealTimeSocket","readyState","WebSocket","OPEN","READY","unsubscribeMessage","id","MESSAGE_TYPES","GQL_STOP","stringToAWSRealTime","JSON","stringify","send","delete","size","_closeSocketWhenFlushed","clearTimeout","keepAliveTimeoutId","bufferedAmount","setTimeout","bind","tempSocket","close","dataString","headerObj","subscriptionMessage","err_1","message","_e","subscriptionFailedCallback_1","_f","_g","_h","_awsRealTimeHeaderBasedAuth","payload","canonicalUri","concat","USER_AGENT_HEADER","USER_AGENT","authorization","GQL_START","_initializeWebSocketConnection","error","errors","GraphQLError","complete","startAckTimeoutId","_timeoutStartSubscriptionAck","discoverableEndpoint","payloadString","headerString","headerQs","payloadQs","awsRealTimeUrl","err_2","CONNECTING","_discoverAppSyncRealTimeEndpoint","Buffer","from","toString","_initializeRetryableHandshake","forEach","headerHandler","handler","host","_awsRealTimeApiKeyHeader","_awsRealTimeIAMHeader","_awsRealTimeOPENIDHeader","parse","Authorization","dt","dtStr","Date","toISOString","replace","endpointInfo","creds","accessKeyId","secretAccessKey","sessionToken","formattedCredentials","signed_params","service","getPromise","access_key","secret_key","session_token","method","Signer","sign","jitteredExponentialRetry","_initializeHandshake","err_3","errorType","errorCode","newSocket","createWebSocket","onerror","onclose","onopen","ackOk","event","reason","onmessage","connectionTimeoutMs","GQL_CONNECTION_ACK","_handleIncomingSubscriptionMessage","GQL_CONNECTION_ERROR","gqlInit","GQL_CONNECTION_INIT","checkAckOk","indexOf","NonRetryableError","_j","GQL_DATA","GQL_START_ACK","GQL_CONNECTION_KEEP_ALIVE","_timeoutDisconnect","GQL_ERROR","FAILED","protocol","ApolloLink"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*!\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\nvar apollo_link_1 = require(\"apollo-link\");\nvar utils_1 = require(\"./utils\");\nvar aws_appsync_auth_link_1 = require(\"aws-appsync-auth-link\");\nvar graphql_1 = require(\"graphql\");\nvar url = require(\"url\");\nvar uuid_1 = require(\"uuid\");\nvar types_1 = require(\"./types\");\nvar retry_1 = require(\"./utils/retry\");\nvar logger = utils_1.rootLogger.extend(\"subscriptions\");\nexports.CONTROL_EVENTS_KEY = \"@@controlEvents\";\nvar NON_RETRYABLE_CODES = [400, 401, 403];\nvar SERVICE = \"appsync\";\nvar APPSYNC_REALTIME_HEADERS = {\n    accept: 'application/json, text/javascript',\n    'content-encoding': 'amz-1.0',\n    'content-type': 'application/json; charset=UTF-8'\n};\n/**\n * Time in milliseconds to wait for GQL_CONNECTION_INIT message\n */\nvar CONNECTION_INIT_TIMEOUT = 15000;\n/**\n * Time in milliseconds to wait for GQL_START_ACK message\n */\nvar START_ACK_TIMEOUT = 15000;\n/**\n * Default Time in milliseconds to wait for GQL_CONNECTION_KEEP_ALIVE message\n */\nvar DEFAULT_KEEP_ALIVE_TIMEOUT = 5 * 60 * 1000;\nvar AppSyncRealTimeSubscriptionHandshakeLink = /** @class */ (function (_super) {\n    __extends(AppSyncRealTimeSubscriptionHandshakeLink, _super);\n    function AppSyncRealTimeSubscriptionHandshakeLink(_a) {\n        var theUrl = _a.url, theRegion = _a.region, theAuth = _a.auth;\n        var _this = _super.call(this) || this;\n        _this.socketStatus = types_1.SOCKET_STATUS.CLOSED;\n        _this.keepAliveTimeout = DEFAULT_KEEP_ALIVE_TIMEOUT;\n        _this.subscriptionObserverMap = new Map();\n        _this.promiseArray = [];\n        _this.url = theUrl;\n        _this.region = theRegion;\n        _this.auth = theAuth;\n        return _this;\n    }\n    AppSyncRealTimeSubscriptionHandshakeLink.prototype.request = function (operation) {\n        var _a;\n        var _this = this;\n        var query = operation.query, variables = operation.variables;\n        var _b = operation.getContext(), _c = _b.controlMessages, _d = exports.CONTROL_EVENTS_KEY, controlEvents = (_c === void 0 ? (_a = {},\n            _a[exports.CONTROL_EVENTS_KEY] = undefined,\n            _a) : _c)[_d], headers = _b.headers;\n        return new apollo_link_1.Observable(function (observer) {\n            var subscriptionId = uuid_1.v4();\n            var options = {\n                appSyncGraphqlEndpoint: _this.url,\n                authenticationType: _this.auth.type,\n                query: graphql_1.print(query),\n                region: _this.region,\n                graphql_headers: function () { return (headers); },\n                variables: variables,\n                apiKey: _this.auth.type === aws_appsync_auth_link_1.AUTH_TYPE.API_KEY ? _this.auth.apiKey : \"\",\n                credentials: _this.auth.type === aws_appsync_auth_link_1.AUTH_TYPE.AWS_IAM ? _this.auth.credentials : null,\n                jwtToken: _this.auth.type === aws_appsync_auth_link_1.AUTH_TYPE.AMAZON_COGNITO_USER_POOLS ||\n                    _this.auth.type === aws_appsync_auth_link_1.AUTH_TYPE.OPENID_CONNECT\n                    ? _this.auth.jwtToken\n                    : null\n            };\n            _this._startSubscriptionWithAWSAppSyncRealTime({\n                options: options,\n                observer: observer,\n                subscriptionId: subscriptionId\n            });\n            return function () { return __awaiter(_this, void 0, void 0, function () {\n                var subscriptionState;\n                return __generator(this, function (_a) {\n                    // Cleanup after unsubscribing or observer.complete was called after _startSubscriptionWithAWSAppSyncRealTime\n                    try {\n                        this._verifySubscriptionAlreadyStarted(subscriptionId);\n                        subscriptionState = this.subscriptionObserverMap.get(subscriptionId).subscriptionState;\n                        if (subscriptionState === types_1.SUBSCRIPTION_STATUS.CONNECTED) {\n                            this._sendUnsubscriptionMessage(subscriptionId);\n                        }\n                        else {\n                            throw new Error(\"Subscription has failed, starting to remove subscription.\");\n                        }\n                    }\n                    catch (err) {\n                        this._removeSubscriptionObserver(subscriptionId);\n                        return [2 /*return*/];\n                    }\n                    return [2 /*return*/];\n                });\n            }); };\n        }).filter(function (data) {\n            var _a = data.extensions, _b = (_a === void 0 ? {} : _a).controlMsgType, controlMsgType = _b === void 0 ? undefined : _b;\n            var isControlMsg = typeof controlMsgType !== \"undefined\";\n            return controlEvents === true || !isControlMsg;\n        });\n    };\n    AppSyncRealTimeSubscriptionHandshakeLink.prototype._verifySubscriptionAlreadyStarted = function (subscriptionId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var subscriptionState;\n            var _this = this;\n            return __generator(this, function (_a) {\n                subscriptionState = this.subscriptionObserverMap.get(subscriptionId).subscriptionState;\n                // This in case unsubscribe is invoked before sending start subscription message\n                if (subscriptionState === types_1.SUBSCRIPTION_STATUS.PENDING) {\n                    return [2 /*return*/, new Promise(function (res, rej) {\n                            var _a = _this.subscriptionObserverMap.get(subscriptionId), observer = _a.observer, subscriptionState = _a.subscriptionState, variables = _a.variables, query = _a.query;\n                            _this.subscriptionObserverMap.set(subscriptionId, {\n                                observer: observer,\n                                subscriptionState: subscriptionState,\n                                variables: variables,\n                                query: query,\n                                subscriptionReadyCallback: res,\n                                subscriptionFailedCallback: rej\n                            });\n                        })];\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    AppSyncRealTimeSubscriptionHandshakeLink.prototype._sendUnsubscriptionMessage = function (subscriptionId) {\n        try {\n            if (this.awsRealTimeSocket &&\n                this.awsRealTimeSocket.readyState === WebSocket.OPEN &&\n                this.socketStatus === types_1.SOCKET_STATUS.READY) {\n                // Preparing unsubscribe message to stop receiving messages for that subscription\n                var unsubscribeMessage = {\n                    id: subscriptionId,\n                    type: types_1.MESSAGE_TYPES.GQL_STOP\n                };\n                var stringToAWSRealTime = JSON.stringify(unsubscribeMessage);\n                this.awsRealTimeSocket.send(stringToAWSRealTime);\n                this._removeSubscriptionObserver(subscriptionId);\n            }\n        }\n        catch (err) {\n            // If GQL_STOP is not sent because of disconnection issue, then there is nothing the client can do\n            logger({ err: err });\n        }\n    };\n    AppSyncRealTimeSubscriptionHandshakeLink.prototype._removeSubscriptionObserver = function (subscriptionId) {\n        this.subscriptionObserverMap.delete(subscriptionId);\n        if (this.subscriptionObserverMap.size === 0) {\n            // Socket could be sending data to unsubscribe so is required to wait until is flushed\n            this._closeSocketWhenFlushed();\n        }\n    };\n    AppSyncRealTimeSubscriptionHandshakeLink.prototype._closeSocketWhenFlushed = function () {\n        logger(\"closing WebSocket...\");\n        clearTimeout(this.keepAliveTimeoutId);\n        if (!this.awsRealTimeSocket) {\n            this.socketStatus = types_1.SOCKET_STATUS.CLOSED;\n            return;\n        }\n        if (this.awsRealTimeSocket.bufferedAmount > 0) {\n            setTimeout(this._closeSocketWhenFlushed.bind(this), 1000);\n        }\n        else {\n            var tempSocket = this.awsRealTimeSocket;\n            tempSocket.close(1000);\n            this.awsRealTimeSocket = null;\n            this.socketStatus = types_1.SOCKET_STATUS.CLOSED;\n        }\n    };\n    AppSyncRealTimeSubscriptionHandshakeLink.prototype._startSubscriptionWithAWSAppSyncRealTime = function (_a) {\n        var options = _a.options, observer = _a.observer, subscriptionId = _a.subscriptionId;\n        return __awaiter(this, void 0, void 0, function () {\n            var appSyncGraphqlEndpoint, authenticationType, query, variables, apiKey, region, _b, graphql_headers, credentials, jwtToken, subscriptionState, data, dataString, headerObj, _c, subscriptionMessage, stringToAWSRealTime, err_1, _d, message, _e, subscriptionFailedCallback_1, _f, subscriptionFailedCallback, subscriptionReadyCallback;\n            var _g;\n            var _this = this;\n            return __generator(this, function (_h) {\n                switch (_h.label) {\n                    case 0:\n                        appSyncGraphqlEndpoint = options.appSyncGraphqlEndpoint, authenticationType = options.authenticationType, query = options.query, variables = options.variables, apiKey = options.apiKey, region = options.region, _b = options.graphql_headers, graphql_headers = _b === void 0 ? function () { return ({}); } : _b, credentials = options.credentials, jwtToken = options.jwtToken;\n                        subscriptionState = types_1.SUBSCRIPTION_STATUS.PENDING;\n                        data = {\n                            query: query,\n                            variables: variables\n                        };\n                        // Having a subscription id map will make it simple to forward messages received\n                        this.subscriptionObserverMap.set(subscriptionId, {\n                            observer: observer,\n                            query: query,\n                            variables: variables,\n                            subscriptionState: subscriptionState\n                        });\n                        dataString = JSON.stringify(data);\n                        _c = [__assign({}, graphql_headers())];\n                        return [4 /*yield*/, this._awsRealTimeHeaderBasedAuth({\n                                apiKey: apiKey,\n                                appSyncGraphqlEndpoint: appSyncGraphqlEndpoint,\n                                authenticationType: authenticationType,\n                                payload: dataString,\n                                canonicalUri: \"\",\n                                region: region,\n                                credentials: credentials,\n                                jwtToken: jwtToken\n                            })];\n                    case 1:\n                        headerObj = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_h.sent())])), (_g = {}, _g[aws_appsync_auth_link_1.USER_AGENT_HEADER] = aws_appsync_auth_link_1.USER_AGENT, _g)]);\n                        subscriptionMessage = {\n                            id: subscriptionId,\n                            payload: {\n                                data: dataString,\n                                extensions: {\n                                    authorization: __assign({}, headerObj)\n                                }\n                            },\n                            type: types_1.MESSAGE_TYPES.GQL_START\n                        };\n                        stringToAWSRealTime = JSON.stringify(subscriptionMessage);\n                        _h.label = 2;\n                    case 2:\n                        _h.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, this._initializeWebSocketConnection({\n                                apiKey: apiKey,\n                                appSyncGraphqlEndpoint: appSyncGraphqlEndpoint,\n                                authenticationType: authenticationType,\n                                region: region,\n                                credentials: credentials,\n                                jwtToken: jwtToken\n                            })];\n                    case 3:\n                        _h.sent();\n                        return [3 /*break*/, 5];\n                    case 4:\n                        err_1 = _h.sent();\n                        _d = err_1.message, message = _d === void 0 ? \"\" : _d;\n                        observer.error({\n                            errors: [\n                                __assign({}, new graphql_1.GraphQLError(\"Connection failed: \" + message))\n                            ]\n                        });\n                        observer.complete();\n                        _e = (this.subscriptionObserverMap.get(subscriptionId) || {}).subscriptionFailedCallback, subscriptionFailedCallback_1 = _e === void 0 ? null : _e;\n                        // Notify concurrent unsubscription\n                        if (typeof subscriptionFailedCallback_1 === \"function\") {\n                            subscriptionFailedCallback_1();\n                        }\n                        return [2 /*return*/];\n                    case 5:\n                        _f = this.subscriptionObserverMap.get(subscriptionId), subscriptionFailedCallback = _f.subscriptionFailedCallback, subscriptionReadyCallback = _f.subscriptionReadyCallback;\n                        // This must be done before sending the message in order to be listening immediately\n                        this.subscriptionObserverMap.set(subscriptionId, {\n                            observer: observer,\n                            subscriptionState: subscriptionState,\n                            variables: variables,\n                            query: query,\n                            subscriptionReadyCallback: subscriptionReadyCallback,\n                            subscriptionFailedCallback: subscriptionFailedCallback,\n                            startAckTimeoutId: setTimeout(function () {\n                                _this._timeoutStartSubscriptionAck.call(_this, subscriptionId);\n                            }, START_ACK_TIMEOUT)\n                        });\n                        this.awsRealTimeSocket.send(stringToAWSRealTime);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AppSyncRealTimeSubscriptionHandshakeLink.prototype._initializeWebSocketConnection = function (_a) {\n        var _this = this;\n        var appSyncGraphqlEndpoint = _a.appSyncGraphqlEndpoint, authenticationType = _a.authenticationType, apiKey = _a.apiKey, region = _a.region, credentials = _a.credentials, jwtToken = _a.jwtToken;\n        if (this.socketStatus === types_1.SOCKET_STATUS.READY) {\n            return Promise.resolve();\n        }\n        return new Promise(function (res, rej) { return __awaiter(_this, void 0, void 0, function () {\n            var discoverableEndpoint, payloadString, headerString, _a, _b, headerQs, payloadQs, awsRealTimeUrl, err_2;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        this.promiseArray.push({ res: res, rej: rej });\n                        if (!(this.socketStatus === types_1.SOCKET_STATUS.CLOSED)) return [3 /*break*/, 5];\n                        _c.label = 1;\n                    case 1:\n                        _c.trys.push([1, 4, , 5]);\n                        this.socketStatus = types_1.SOCKET_STATUS.CONNECTING;\n                        discoverableEndpoint = AppSyncRealTimeSubscriptionHandshakeLink._discoverAppSyncRealTimeEndpoint(this.url);\n                        payloadString = \"{}\";\n                        _b = (_a = JSON).stringify;\n                        return [4 /*yield*/, this._awsRealTimeHeaderBasedAuth({\n                                authenticationType: authenticationType,\n                                payload: payloadString,\n                                canonicalUri: \"/connect\",\n                                apiKey: apiKey,\n                                appSyncGraphqlEndpoint: appSyncGraphqlEndpoint,\n                                region: region,\n                                credentials: credentials,\n                                jwtToken: jwtToken\n                            })];\n                    case 2:\n                        headerString = _b.apply(_a, [_c.sent()]);\n                        headerQs = Buffer.from(headerString).toString(\"base64\");\n                        payloadQs = Buffer.from(payloadString).toString(\"base64\");\n                        awsRealTimeUrl = discoverableEndpoint + \"?header=\" + headerQs + \"&payload=\" + payloadQs;\n                        return [4 /*yield*/, this._initializeRetryableHandshake({ awsRealTimeUrl: awsRealTimeUrl })];\n                    case 3:\n                        _c.sent();\n                        this.promiseArray.forEach(function (_a) {\n                            var res = _a.res;\n                            logger(\"Notifying connection successful\");\n                            res();\n                        });\n                        this.socketStatus = types_1.SOCKET_STATUS.READY;\n                        this.promiseArray = [];\n                        return [3 /*break*/, 5];\n                    case 4:\n                        err_2 = _c.sent();\n                        this.promiseArray.forEach(function (_a) {\n                            var rej = _a.rej;\n                            return rej(err_2);\n                        });\n                        this.promiseArray = [];\n                        if (this.awsRealTimeSocket &&\n                            this.awsRealTimeSocket.readyState === WebSocket.OPEN) {\n                            this.awsRealTimeSocket.close(3001);\n                        }\n                        this.awsRealTimeSocket = null;\n                        this.socketStatus = types_1.SOCKET_STATUS.CLOSED;\n                        return [3 /*break*/, 5];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    AppSyncRealTimeSubscriptionHandshakeLink.prototype._awsRealTimeHeaderBasedAuth = function (_a) {\n        var authenticationType = _a.authenticationType, payload = _a.payload, canonicalUri = _a.canonicalUri, appSyncGraphqlEndpoint = _a.appSyncGraphqlEndpoint, apiKey = _a.apiKey, region = _a.region, credentials = _a.credentials, jwtToken = _a.jwtToken;\n        return __awaiter(this, void 0, void 0, function () {\n            var headerHandler, handler, host, result;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        headerHandler = {\n                            API_KEY: this._awsRealTimeApiKeyHeader.bind(this),\n                            AWS_IAM: this._awsRealTimeIAMHeader.bind(this),\n                            OPENID_CONNECT: this._awsRealTimeOPENIDHeader.bind(this),\n                            AMAZON_COGNITO_USER_POOLS: this._awsRealTimeOPENIDHeader.bind(this)\n                        };\n                        handler = headerHandler[authenticationType];\n                        if (typeof handler !== \"function\") {\n                            logger(\"Authentication type \" + authenticationType + \" not supported\");\n                            return [2 /*return*/, {}];\n                        }\n                        host = url.parse(appSyncGraphqlEndpoint).host;\n                        return [4 /*yield*/, handler({\n                                payload: payload,\n                                canonicalUri: canonicalUri,\n                                appSyncGraphqlEndpoint: appSyncGraphqlEndpoint,\n                                apiKey: apiKey,\n                                region: region,\n                                host: host,\n                                credentials: credentials,\n                                jwtToken: jwtToken\n                            })];\n                    case 1:\n                        result = _b.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    AppSyncRealTimeSubscriptionHandshakeLink.prototype._awsRealTimeOPENIDHeader = function (_a) {\n        var host = _a.host, jwtToken = _a.jwtToken;\n        return __awaiter(this, void 0, void 0, function () {\n            var _b, _c;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _b = {};\n                        if (!(typeof jwtToken === \"function\")) return [3 /*break*/, 2];\n                        return [4 /*yield*/, jwtToken.call(undefined)];\n                    case 1:\n                        _c = _d.sent();\n                        return [3 /*break*/, 4];\n                    case 2: return [4 /*yield*/, jwtToken];\n                    case 3:\n                        _c = _d.sent();\n                        _d.label = 4;\n                    case 4: return [2 /*return*/, (_b.Authorization = _c,\n                            _b.host = host,\n                            _b)];\n                }\n            });\n        });\n    };\n    AppSyncRealTimeSubscriptionHandshakeLink.prototype._awsRealTimeApiKeyHeader = function (_a) {\n        var apiKey = _a.apiKey, host = _a.host;\n        return __awaiter(this, void 0, void 0, function () {\n            var dt, dtStr;\n            return __generator(this, function (_b) {\n                dt = new Date();\n                dtStr = dt.toISOString().replace(/[:\\-]|\\.\\d{3}/g, \"\");\n                return [2 /*return*/, {\n                        host: host,\n                        \"x-amz-date\": dtStr,\n                        \"x-api-key\": apiKey\n                    }];\n            });\n        });\n    };\n    AppSyncRealTimeSubscriptionHandshakeLink.prototype._awsRealTimeIAMHeader = function (_a) {\n        var payload = _a.payload, canonicalUri = _a.canonicalUri, appSyncGraphqlEndpoint = _a.appSyncGraphqlEndpoint, region = _a.region, credentials = _a.credentials;\n        return __awaiter(this, void 0, void 0, function () {\n            var endpointInfo, creds, _b, accessKeyId, secretAccessKey, sessionToken, formattedCredentials, request, signed_params;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        endpointInfo = {\n                            region: region,\n                            service: SERVICE\n                        };\n                        creds = typeof credentials === \"function\"\n                            ? credentials.call()\n                            : credentials || {};\n                        if (!(creds && typeof creds.getPromise === \"function\")) return [3 /*break*/, 2];\n                        return [4 /*yield*/, creds.getPromise()];\n                    case 1:\n                        _c.sent();\n                        _c.label = 2;\n                    case 2:\n                        if (!creds) {\n                            throw new Error(\"No credentials\");\n                        }\n                        return [4 /*yield*/, creds];\n                    case 3:\n                        _b = _c.sent(), accessKeyId = _b.accessKeyId, secretAccessKey = _b.secretAccessKey, sessionToken = _b.sessionToken;\n                        formattedCredentials = {\n                            access_key: accessKeyId,\n                            secret_key: secretAccessKey,\n                            session_token: sessionToken\n                        };\n                        request = {\n                            url: \"\" + appSyncGraphqlEndpoint + canonicalUri,\n                            body: payload,\n                            method: \"POST\",\n                            headers: __assign({}, APPSYNC_REALTIME_HEADERS)\n                        };\n                        signed_params = aws_appsync_auth_link_1.Signer.sign(request, formattedCredentials, endpointInfo);\n                        return [2 /*return*/, signed_params.headers];\n                }\n            });\n        });\n    };\n    AppSyncRealTimeSubscriptionHandshakeLink.prototype._initializeRetryableHandshake = function (_a) {\n        var awsRealTimeUrl = _a.awsRealTimeUrl;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        logger(\"Initializaling retryable Handshake\");\n                        return [4 /*yield*/, retry_1.jitteredExponentialRetry(this._initializeHandshake.bind(this), [\n                                { awsRealTimeUrl: awsRealTimeUrl }\n                            ])];\n                    case 1:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AppSyncRealTimeSubscriptionHandshakeLink.prototype._initializeHandshake = function (_a) {\n        var awsRealTimeUrl = _a.awsRealTimeUrl;\n        return __awaiter(this, void 0, void 0, function () {\n            var err_3, errorType, errorCode;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        logger(\"Initializing handshake \" + awsRealTimeUrl);\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 4, , 5]);\n                        return [4 /*yield*/, (function () {\n                                return new Promise(function (res, rej) {\n                                    var newSocket = AppSyncRealTimeSubscriptionHandshakeLink.createWebSocket(awsRealTimeUrl, \"graphql-ws\");\n                                    newSocket.onerror = function () {\n                                        logger(\"WebSocket connection error\");\n                                    };\n                                    newSocket.onclose = function () {\n                                        rej(new Error(\"Connection handshake error\"));\n                                    };\n                                    newSocket.onopen = function () {\n                                        _this.awsRealTimeSocket = newSocket;\n                                        return res();\n                                    };\n                                });\n                            })()];\n                    case 2:\n                        _b.sent();\n                        // Step 2: wait for ack from AWS AppSyncReaTime after sending init\n                        return [4 /*yield*/, (function () {\n                                return new Promise(function (res, rej) {\n                                    var ackOk = false;\n                                    _this.awsRealTimeSocket.onerror = function (error) {\n                                        logger(\"WebSocket closed \" + JSON.stringify(error));\n                                    };\n                                    _this.awsRealTimeSocket.onclose = function (event) {\n                                        logger(\"WebSocket closed \" + event.reason);\n                                        rej(new Error(JSON.stringify(event)));\n                                    };\n                                    _this.awsRealTimeSocket.onmessage = function (message) {\n                                        logger(\"subscription message from AWS AppSyncRealTime: \" + message.data + \" \");\n                                        var data = JSON.parse(message.data);\n                                        var type = data.type, _a = data.payload, _b = (_a === void 0 ? {} : _a).connectionTimeoutMs, connectionTimeoutMs = _b === void 0 ? DEFAULT_KEEP_ALIVE_TIMEOUT : _b;\n                                        if (type === types_1.MESSAGE_TYPES.GQL_CONNECTION_ACK) {\n                                            ackOk = true;\n                                            _this.keepAliveTimeout = connectionTimeoutMs;\n                                            _this.awsRealTimeSocket.onmessage = _this._handleIncomingSubscriptionMessage.bind(_this);\n                                            res(\"Cool, connected to AWS AppSyncRealTime\");\n                                            return;\n                                        }\n                                        if (type === types_1.MESSAGE_TYPES.GQL_CONNECTION_ERROR) {\n                                            var _c = data.payload, _d = (_c === void 0 ? {} : _c).errors, _e = (_d === void 0 ? [] : _d)[0], _f = _e === void 0 ? {} : _e, _g = _f.errorType, errorType = _g === void 0 ? \"\" : _g, _h = _f.errorCode, errorCode = _h === void 0 ? 0 : _h;\n                                            rej({ errorType: errorType, errorCode: errorCode });\n                                        }\n                                    };\n                                    var gqlInit = {\n                                        type: types_1.MESSAGE_TYPES.GQL_CONNECTION_INIT\n                                    };\n                                    _this.awsRealTimeSocket.send(JSON.stringify(gqlInit));\n                                    function checkAckOk() {\n                                        if (!ackOk) {\n                                            rej(new Error(\"Connection timeout: ack from AWSRealTime was not received on \" + CONNECTION_INIT_TIMEOUT + \" ms\"));\n                                        }\n                                    }\n                                    setTimeout(checkAckOk.bind(_this), CONNECTION_INIT_TIMEOUT);\n                                });\n                            })()];\n                    case 3:\n                        // Step 2: wait for ack from AWS AppSyncReaTime after sending init\n                        _b.sent();\n                        return [3 /*break*/, 5];\n                    case 4:\n                        err_3 = _b.sent();\n                        errorType = err_3.errorType, errorCode = err_3.errorCode;\n                        if (NON_RETRYABLE_CODES.indexOf(errorCode) >= 0) {\n                            throw new retry_1.NonRetryableError(errorType);\n                        }\n                        else if (errorType) {\n                            throw new Error(errorType);\n                        }\n                        else {\n                            throw err_3;\n                        }\n                        return [3 /*break*/, 5];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AppSyncRealTimeSubscriptionHandshakeLink.prototype._handleIncomingSubscriptionMessage = function (message) {\n        logger(\"subscription message from AWS AppSync RealTime: \" + message.data);\n        var _a = JSON.parse(message.data), _b = _a.id, id = _b === void 0 ? \"\" : _b, payload = _a.payload, type = _a.type;\n        var _c = this.subscriptionObserverMap.get(id) || {}, _d = _c.observer, observer = _d === void 0 ? null : _d, _e = _c.query, query = _e === void 0 ? \"\" : _e, _f = _c.variables, variables = _f === void 0 ? {} : _f, _g = _c.startAckTimeoutId, startAckTimeoutId = _g === void 0 ? 0 : _g, _h = _c.subscriptionReadyCallback, subscriptionReadyCallback = _h === void 0 ? null : _h, _j = _c.subscriptionFailedCallback, subscriptionFailedCallback = _j === void 0 ? null : _j;\n        logger({ id: id, observer: observer, query: query, variables: variables });\n        if (type === types_1.MESSAGE_TYPES.GQL_DATA && payload && payload.data) {\n            if (observer) {\n                observer.next(payload);\n            }\n            else {\n                logger(\"observer not found for id: \" + id);\n            }\n            return;\n        }\n        if (type === types_1.MESSAGE_TYPES.GQL_START_ACK) {\n            logger(\"subscription ready for \" + JSON.stringify({ query: query, variables: variables }));\n            if (typeof subscriptionReadyCallback === \"function\") {\n                subscriptionReadyCallback();\n            }\n            clearTimeout(startAckTimeoutId);\n            if (observer) {\n                observer.next({\n                    data: payload,\n                    extensions: {\n                        controlMsgType: \"CONNECTED\"\n                    }\n                });\n            }\n            else {\n                logger(\"observer not found for id: \" + id);\n            }\n            var subscriptionState = types_1.SUBSCRIPTION_STATUS.CONNECTED;\n            this.subscriptionObserverMap.set(id, {\n                observer: observer,\n                query: query,\n                variables: variables,\n                startAckTimeoutId: null,\n                subscriptionState: subscriptionState,\n                subscriptionReadyCallback: subscriptionReadyCallback,\n                subscriptionFailedCallback: subscriptionFailedCallback\n            });\n            return;\n        }\n        if (type === types_1.MESSAGE_TYPES.GQL_CONNECTION_KEEP_ALIVE) {\n            clearTimeout(this.keepAliveTimeoutId);\n            this.keepAliveTimeoutId = setTimeout(this._timeoutDisconnect.bind(this), this.keepAliveTimeout);\n            return;\n        }\n        if (type === types_1.MESSAGE_TYPES.GQL_ERROR) {\n            var subscriptionState = types_1.SUBSCRIPTION_STATUS.FAILED;\n            this.subscriptionObserverMap.set(id, {\n                observer: observer,\n                query: query,\n                variables: variables,\n                startAckTimeoutId: startAckTimeoutId,\n                subscriptionReadyCallback: subscriptionReadyCallback,\n                subscriptionFailedCallback: subscriptionFailedCallback,\n                subscriptionState: subscriptionState\n            });\n            observer.error({\n                errors: [\n                    __assign({}, new graphql_1.GraphQLError(\"Connection failed: \" + JSON.stringify(payload)))\n                ]\n            });\n            clearTimeout(startAckTimeoutId);\n            observer.complete();\n            if (typeof subscriptionFailedCallback === \"function\") {\n                subscriptionFailedCallback();\n            }\n        }\n    };\n    AppSyncRealTimeSubscriptionHandshakeLink.prototype._timeoutDisconnect = function () {\n        this.subscriptionObserverMap.forEach(function (_a) {\n            var observer = _a.observer;\n            observer.error({\n                errors: [__assign({}, new graphql_1.GraphQLError(\"Timeout disconnect\"))]\n            });\n            observer.complete();\n        });\n        this.subscriptionObserverMap = new Map();\n        if (this.awsRealTimeSocket) {\n            this.awsRealTimeSocket.close();\n        }\n        this.socketStatus = types_1.SOCKET_STATUS.CLOSED;\n    };\n    AppSyncRealTimeSubscriptionHandshakeLink.prototype._timeoutStartSubscriptionAck = function (subscriptionId) {\n        var _a = this.subscriptionObserverMap.get(subscriptionId), observer = _a.observer, query = _a.query, variables = _a.variables;\n        this.subscriptionObserverMap.set(subscriptionId, {\n            observer: observer,\n            query: query,\n            variables: variables,\n            subscriptionState: types_1.SUBSCRIPTION_STATUS.FAILED\n        });\n        observer.error({\n            errors: [\n                __assign({}, new graphql_1.GraphQLError(\"Subscription timeout \" + JSON.stringify({ query: query, variables: variables })))\n            ]\n        });\n        // Cleanup will be automatically executed\n        observer.complete();\n        logger(\"timeoutStartSubscription\", JSON.stringify({ query: query, variables: variables }));\n    };\n    AppSyncRealTimeSubscriptionHandshakeLink.createWebSocket = function (awsRealTimeUrl, protocol) {\n        return new WebSocket(awsRealTimeUrl, protocol);\n    };\n    AppSyncRealTimeSubscriptionHandshakeLink._discoverAppSyncRealTimeEndpoint = function (url) {\n        return url\n            .replace(\"https://\", \"wss://\")\n            .replace('http://', 'ws://')\n            .replace(\"appsync-api\", \"appsync-realtime-api\")\n            .replace(\"gogi-beta\", \"grt-beta\");\n    };\n    return AppSyncRealTimeSubscriptionHandshakeLink;\n}(apollo_link_1.ApolloLink));\nexports.AppSyncRealTimeSubscriptionHandshakeLink = AppSyncRealTimeSubscriptionHandshakeLink;\n"]},"metadata":{},"sourceType":"script"}