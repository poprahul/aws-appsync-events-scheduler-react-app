{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { printError } from './printError';\nimport { getLocation } from '../language/location';\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport function GraphQLError( // eslint-disable-line no-redeclare\nmessage, nodes, source, positions, path, originalError, extensions) {\n  // Compute list of blame nodes.\n  var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined; // Compute locations in the source for the given nodes/positions.\n\n\n  var _source = source;\n\n  if (!_source && _nodes) {\n    var node = _nodes[0];\n    _source = node && node.loc && node.loc.source;\n  }\n\n  var _positions = positions;\n\n  if (!_positions && _nodes) {\n    _positions = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(node.loc.start);\n      }\n\n      return list;\n    }, []);\n  }\n\n  if (_positions && _positions.length === 0) {\n    _positions = undefined;\n  }\n\n  var _locations = void 0;\n\n  if (positions && source) {\n    var providedSource = source;\n    _locations = positions.map(function (pos) {\n      return getLocation(providedSource, pos);\n    });\n  } else if (_nodes) {\n    _locations = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(getLocation(node.loc.source, node.loc.start));\n      }\n\n      return list;\n    }, []);\n  }\n\n  Object.defineProperties(this, {\n    message: {\n      value: message,\n      // By being enumerable, JSON.stringify will include `message` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true,\n      writable: true\n    },\n    locations: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _locations || undefined,\n      // By being enumerable, JSON.stringify will include `locations` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true\n    },\n    path: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: path || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true\n    },\n    nodes: {\n      value: _nodes || undefined\n    },\n    source: {\n      value: _source || undefined\n    },\n    positions: {\n      value: _positions || undefined\n    },\n    originalError: {\n      value: originalError\n    },\n    extensions: {\n      value: extensions || originalError && originalError.extensions\n    }\n  }); // Include (non-enumerable) stack trace.\n\n  if (originalError && originalError.stack) {\n    Object.defineProperty(this, 'stack', {\n      value: originalError.stack,\n      writable: true,\n      configurable: true\n    });\n  } else if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, GraphQLError);\n  } else {\n    Object.defineProperty(this, 'stack', {\n      value: Error().stack,\n      writable: true,\n      configurable: true\n    });\n  }\n}\nGraphQLError.prototype = Object.create(Error.prototype, {\n  constructor: {\n    value: GraphQLError\n  },\n  name: {\n    value: 'GraphQLError'\n  },\n  toString: {\n    value: function toString() {\n      return printError(this);\n    }\n  }\n});","map":{"version":3,"sources":["/Users/poprahul/workspace/frontend/amplify-apps/calandarApp/aws-mobile-appsync-events-starter-react/node_modules/aws-appsync/node_modules/graphql/module/error/GraphQLError.js"],"names":["printError","getLocation","GraphQLError","message","nodes","source","positions","path","originalError","extensions","_nodes","Array","isArray","length","undefined","_source","node","loc","_positions","reduce","list","push","start","_locations","providedSource","map","pos","Object","defineProperties","value","enumerable","writable","locations","stack","defineProperty","configurable","Error","captureStackTrace","prototype","create","constructor","name","toString"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport { printError } from './printError';\nimport { getLocation } from '../language/location';\n\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\n\nexport function GraphQLError( // eslint-disable-line no-redeclare\nmessage, nodes, source, positions, path, originalError, extensions) {\n  // Compute list of blame nodes.\n  var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined;\n\n  // Compute locations in the source for the given nodes/positions.\n  var _source = source;\n  if (!_source && _nodes) {\n    var node = _nodes[0];\n    _source = node && node.loc && node.loc.source;\n  }\n\n  var _positions = positions;\n  if (!_positions && _nodes) {\n    _positions = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(node.loc.start);\n      }\n      return list;\n    }, []);\n  }\n  if (_positions && _positions.length === 0) {\n    _positions = undefined;\n  }\n\n  var _locations = void 0;\n  if (positions && source) {\n    var providedSource = source;\n    _locations = positions.map(function (pos) {\n      return getLocation(providedSource, pos);\n    });\n  } else if (_nodes) {\n    _locations = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(getLocation(node.loc.source, node.loc.start));\n      }\n      return list;\n    }, []);\n  }\n\n  Object.defineProperties(this, {\n    message: {\n      value: message,\n      // By being enumerable, JSON.stringify will include `message` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true,\n      writable: true\n    },\n    locations: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _locations || undefined,\n      // By being enumerable, JSON.stringify will include `locations` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true\n    },\n    path: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: path || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true\n    },\n    nodes: {\n      value: _nodes || undefined\n    },\n    source: {\n      value: _source || undefined\n    },\n    positions: {\n      value: _positions || undefined\n    },\n    originalError: {\n      value: originalError\n    },\n    extensions: {\n      value: extensions || originalError && originalError.extensions\n    }\n  });\n\n  // Include (non-enumerable) stack trace.\n  if (originalError && originalError.stack) {\n    Object.defineProperty(this, 'stack', {\n      value: originalError.stack,\n      writable: true,\n      configurable: true\n    });\n  } else if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, GraphQLError);\n  } else {\n    Object.defineProperty(this, 'stack', {\n      value: Error().stack,\n      writable: true,\n      configurable: true\n    });\n  }\n}\n\nGraphQLError.prototype = Object.create(Error.prototype, {\n  constructor: { value: GraphQLError },\n  name: { value: 'GraphQLError' },\n  toString: {\n    value: function toString() {\n      return printError(this);\n    }\n  }\n});"]},"metadata":{},"sourceType":"module"}