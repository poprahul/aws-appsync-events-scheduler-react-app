{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.print = print;\n\nvar _visitor = require('./visitor');\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\n\nfunction print(ast) {\n  return (0, _visitor.visit)(ast, {\n    leave: printDocASTReducer\n  });\n}\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n  // Document\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet; // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue;\n    return variable + ': ' + type + wrap(' = ', defaultValue);\n  },\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    return join([wrap('', alias, ': ') + name + wrap('(', join(args, ', '), ')'), join(directives, ' '), selectionSet], ' ');\n  },\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n  // Fragments\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return 'fragment ' + name + ' on ' + typeCondition + ' ' + wrap('', join(directives, ' '), ' ') + selectionSet;\n  },\n  // Value\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10) {\n    var value = _ref10.value;\n    return JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return JSON.stringify(value);\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n  // Directive\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n  // Type\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n  // Type System Definitions\n  SchemaDefinition: function SchemaDefinition(_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n  ScalarTypeDefinition: function ScalarTypeDefinition(_ref22) {\n    var name = _ref22.name,\n        directives = _ref22.directives;\n    return join(['scalar', name, join(directives, ' ')], ' ');\n  },\n  ObjectTypeDefinition: function ObjectTypeDefinition(_ref23) {\n    var name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join(['type', name, wrap('implements ', join(interfaces, ', ')), join(directives, ' '), block(fields)], ' ');\n  },\n  FieldDefinition: function FieldDefinition(_ref24) {\n    var name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return name + wrap('(', join(args, ', '), ')') + ': ' + type + wrap(' ', join(directives, ' '));\n  },\n  InputValueDefinition: function InputValueDefinition(_ref25) {\n    var name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');\n  },\n  InterfaceTypeDefinition: function InterfaceTypeDefinition(_ref26) {\n    var name = _ref26.name,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join(['interface', name, join(directives, ' '), block(fields)], ' ');\n  },\n  UnionTypeDefinition: function UnionTypeDefinition(_ref27) {\n    var name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join(['union', name, join(directives, ' '), '= ' + join(types, ' | ')], ' ');\n  },\n  EnumTypeDefinition: function EnumTypeDefinition(_ref28) {\n    var name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join(['enum', name, join(directives, ' '), block(values)], ' ');\n  },\n  EnumValueDefinition: function EnumValueDefinition(_ref29) {\n    var name = _ref29.name,\n        directives = _ref29.directives;\n    return join([name, join(directives, ' ')], ' ');\n  },\n  InputObjectTypeDefinition: function InputObjectTypeDefinition(_ref30) {\n    var name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join(['input', name, join(directives, ' '), block(fields)], ' ');\n  },\n  TypeExtensionDefinition: function TypeExtensionDefinition(_ref31) {\n    var definition = _ref31.definition;\n    return 'extend ' + definition;\n  },\n  DirectiveDefinition: function DirectiveDefinition(_ref32) {\n    var name = _ref32.name,\n        args = _ref32.arguments,\n        locations = _ref32.locations;\n    return 'directive @' + name + wrap('(', join(args, ', '), ')') + ' on ' + join(locations, ' | ');\n  }\n};\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\nfunction join(maybeArray, separator) {\n  return maybeArray ? maybeArray.filter(function (x) {\n    return x;\n  }).join(separator || '') : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\n\n\nfunction block(array) {\n  return array && array.length !== 0 ? indent('{\\n' + join(array, '\\n')) + '\\n}' : '{}';\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise\n * print an empty string.\n */\n\n\nfunction wrap(start, maybeString, end) {\n  return maybeString ? start + maybeString + (end || '') : '';\n}\n\nfunction indent(maybeString) {\n  return maybeString && maybeString.replace(/\\n/g, '\\n  ');\n}","map":{"version":3,"sources":["/Users/poprahul/workspace/frontend/amplify-apps/calandarApp/aws-mobile-appsync-events-starter-react/node_modules/graphql/language/printer.js"],"names":["Object","defineProperty","exports","value","print","_visitor","require","ast","visit","leave","printDocASTReducer","Name","node","Variable","name","Document","join","definitions","OperationDefinition","op","operation","varDefs","wrap","variableDefinitions","directives","selectionSet","VariableDefinition","_ref","variable","type","defaultValue","SelectionSet","_ref2","selections","block","Field","_ref3","alias","args","arguments","Argument","_ref4","FragmentSpread","_ref5","InlineFragment","_ref6","typeCondition","FragmentDefinition","_ref7","IntValue","_ref8","FloatValue","_ref9","StringValue","_ref10","JSON","stringify","BooleanValue","_ref11","NullValue","EnumValue","_ref12","ListValue","_ref13","values","ObjectValue","_ref14","fields","ObjectField","_ref15","Directive","_ref16","NamedType","_ref17","ListType","_ref18","NonNullType","_ref19","SchemaDefinition","_ref20","operationTypes","OperationTypeDefinition","_ref21","ScalarTypeDefinition","_ref22","ObjectTypeDefinition","_ref23","interfaces","FieldDefinition","_ref24","InputValueDefinition","_ref25","InterfaceTypeDefinition","_ref26","UnionTypeDefinition","_ref27","types","EnumTypeDefinition","_ref28","EnumValueDefinition","_ref29","InputObjectTypeDefinition","_ref30","TypeExtensionDefinition","_ref31","definition","DirectiveDefinition","_ref32","locations","maybeArray","separator","filter","x","array","length","indent","start","maybeString","end","replace"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.print = print;\n\nvar _visitor = require('./visitor');\n\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\nfunction print(ast) {\n  return (0, _visitor.visit)(ast, { leave: printDocASTReducer });\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n\n  // Document\n\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet;\n    // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n\n\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue;\n    return variable + ': ' + type + wrap(' = ', defaultValue);\n  },\n\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    return join([wrap('', alias, ': ') + name + wrap('(', join(args, ', '), ')'), join(directives, ' '), selectionSet], ' ');\n  },\n\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n\n  // Fragments\n\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return 'fragment ' + name + ' on ' + typeCondition + ' ' + wrap('', join(directives, ' '), ' ') + selectionSet;\n  },\n\n  // Value\n\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10) {\n    var value = _ref10.value;\n    return JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return JSON.stringify(value);\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n\n  // Directive\n\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n\n  // Type\n\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n\n  // Type System Definitions\n\n  SchemaDefinition: function SchemaDefinition(_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n\n  ScalarTypeDefinition: function ScalarTypeDefinition(_ref22) {\n    var name = _ref22.name,\n        directives = _ref22.directives;\n    return join(['scalar', name, join(directives, ' ')], ' ');\n  },\n\n  ObjectTypeDefinition: function ObjectTypeDefinition(_ref23) {\n    var name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join(['type', name, wrap('implements ', join(interfaces, ', ')), join(directives, ' '), block(fields)], ' ');\n  },\n\n  FieldDefinition: function FieldDefinition(_ref24) {\n    var name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return name + wrap('(', join(args, ', '), ')') + ': ' + type + wrap(' ', join(directives, ' '));\n  },\n\n  InputValueDefinition: function InputValueDefinition(_ref25) {\n    var name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');\n  },\n\n  InterfaceTypeDefinition: function InterfaceTypeDefinition(_ref26) {\n    var name = _ref26.name,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join(['interface', name, join(directives, ' '), block(fields)], ' ');\n  },\n\n  UnionTypeDefinition: function UnionTypeDefinition(_ref27) {\n    var name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join(['union', name, join(directives, ' '), '= ' + join(types, ' | ')], ' ');\n  },\n\n  EnumTypeDefinition: function EnumTypeDefinition(_ref28) {\n    var name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join(['enum', name, join(directives, ' '), block(values)], ' ');\n  },\n\n  EnumValueDefinition: function EnumValueDefinition(_ref29) {\n    var name = _ref29.name,\n        directives = _ref29.directives;\n    return join([name, join(directives, ' ')], ' ');\n  },\n\n  InputObjectTypeDefinition: function InputObjectTypeDefinition(_ref30) {\n    var name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join(['input', name, join(directives, ' '), block(fields)], ' ');\n  },\n\n  TypeExtensionDefinition: function TypeExtensionDefinition(_ref31) {\n    var definition = _ref31.definition;\n    return 'extend ' + definition;\n  },\n\n  DirectiveDefinition: function DirectiveDefinition(_ref32) {\n    var name = _ref32.name,\n        args = _ref32.arguments,\n        locations = _ref32.locations;\n    return 'directive @' + name + wrap('(', join(args, ', '), ')') + ' on ' + join(locations, ' | ');\n  }\n};\n\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\nfunction join(maybeArray, separator) {\n  return maybeArray ? maybeArray.filter(function (x) {\n    return x;\n  }).join(separator || '') : '';\n}\n\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\nfunction block(array) {\n  return array && array.length !== 0 ? indent('{\\n' + join(array, '\\n')) + '\\n}' : '{}';\n}\n\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise\n * print an empty string.\n */\nfunction wrap(start, maybeString, end) {\n  return maybeString ? start + maybeString + (end || '') : '';\n}\n\nfunction indent(maybeString) {\n  return maybeString && maybeString.replace(/\\n/g, '\\n  ');\n}"]},"metadata":{},"sourceType":"script"}